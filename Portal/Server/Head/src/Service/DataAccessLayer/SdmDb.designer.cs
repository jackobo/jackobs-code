#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GamesPortal.Service.SDM
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_SDM")]
	public partial class SdmDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBrand(Brand instance);
    partial void UpdateBrand(Brand instance);
    partial void DeleteBrand(Brand instance);
    partial void InsertCurrency(Currency instance);
    partial void UpdateCurrency(Currency instance);
    partial void DeleteCurrency(Currency instance);
    partial void InsertGameType(GameType instance);
    partial void UpdateGameType(GameType instance);
    partial void DeleteGameType(GameType instance);
    partial void InsertGameVendor(GameVendor instance);
    partial void UpdateGameVendor(GameVendor instance);
    partial void DeleteGameVendor(GameVendor instance);
    partial void InsertGameGroup(GameGroup instance);
    partial void UpdateGameGroup(GameGroup instance);
    partial void DeleteGameGroup(GameGroup instance);
    partial void InsertRegulationType(RegulationType instance);
    partial void UpdateRegulationType(RegulationType instance);
    partial void DeleteRegulationType(RegulationType instance);
    #endregion
		
		public SdmDataContext() : 
				base(global::GamesPortal.Service.Properties.Settings.Default.DB_SDMConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SdmDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SdmDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SdmDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SdmDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Brand> Brands
		{
			get
			{
				return this.GetTable<Brand>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Currency> Currencies
		{
			get
			{
				return this.GetTable<Currency>();
			}
		}
		
		public System.Data.Linq.Table<GameType> GameTypes
		{
			get
			{
				return this.GetTable<GameType>();
			}
		}
		
		public System.Data.Linq.Table<GameVendor> GameVendors
		{
			get
			{
				return this.GetTable<GameVendor>();
			}
		}
		
		public System.Data.Linq.Table<GameGroup> GameGroups
		{
			get
			{
				return this.GetTable<GameGroup>();
			}
		}
		
		public System.Data.Linq.Table<RegulationType> RegulationTypes
		{
			get
			{
				return this.GetTable<RegulationType>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="MD.[_Brands]")]
	public partial class Brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BRN_ID;
		
		private string _BRN_FullName;
		
		private string _BRN_ShortName;
		
		private System.Nullable<int> _BRN_BRG_ID;
		
		private bool _BRN_IsActive;
		
		private System.Nullable<int> _BRN_OPRT_ID;
		
		private System.Nullable<byte> _BRN_IsUO;
		
		private System.Nullable<byte> _BRN_IsExternalAccount;
		
		private System.Nullable<int> _BRN_DefaultNTSWizardConfigurationID;
		
		private System.Nullable<short> _BRN_DefaultStatusCode;
		
		private byte _BRN_DefaultOrientation;
		
		private System.Nullable<byte> _BRN_IsNonP2PWin2BR;
		
		private System.Nullable<bool> _BRN_KeepWinningsOnExpiration;
		
		private System.Nullable<byte> _BRN_IsRegulated;
		
		private System.Nullable<byte> _BRN_RGLT_ID;
		
		private System.Nullable<byte> _BRN_IsDepositWRNeeded;
		
		private System.Nullable<byte> _BRN_MaxActiveAccountsAllowedPerTaxId;
		
		private System.Nullable<short> _BRN_Licensee_ID;
		
		private System.Nullable<short> _BRN_Network_ID;
		
		private System.Nullable<int> _BRN_LoginTokenExpirationMinutes;
		
		private System.Nullable<bool> _BRN_ToCalculateDaysToUploadDocs;
		
		private System.Nullable<int> _BRN_RestrictProxyInLogin;
		
		private bool _BRN_RestrictProxyInRegistration;
		
		private bool _BRN_PLRVerificationNeeded;
		
		private byte _BRN_DC_DataCenterID;
		
		private System.Nullable<int> _BRN_DailyRenewalLimit;
		
		private System.Nullable<int> _BRN_LimitationPeriod;
		
		private System.Xml.Linq.XElement _BRN_GEO_SMS_Configuration;
		
		private System.Xml.Linq.XElement _BRN_SocialNetwork_Configuration;
		
		private System.Xml.Linq.XElement _BRN_RegistrationConfiguration;
		
		private string _BRN_TermsConditionsVersion;
		
		private System.Nullable<byte> _BRN_ENV_ID;
		
		private string _BRN_URL;
		
		private System.Nullable<byte> _BRN_RoamingProtectionLevel;
		
		private System.Xml.Linq.XElement _BRN_ExtraData;
		
		private System.Nullable<int> _BRN_PixelTrackingMethod;
		
		private bool _BRN_IgnoreContributionFromRestrictedMoney;
		
		private System.Nullable<bool> _BRN_UpsellConfiguration_IsDoubleOffer;
		
		private System.Nullable<short> _BRN_LP_ID;
		
		private System.Nullable<bool> _BRN_CashRedemptionPermitted;
		
		private string _BRN_CURR_Alpha;
		
		private System.Xml.Linq.XElement _BRN_RM_Configurations;
		
		private bool _BRN_ShowLOLData;
		
		private bool _BRN_LOLUpdates_via_Diffusion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBRN_IDChanging(int value);
    partial void OnBRN_IDChanged();
    partial void OnBRN_FullNameChanging(string value);
    partial void OnBRN_FullNameChanged();
    partial void OnBRN_ShortNameChanging(string value);
    partial void OnBRN_ShortNameChanged();
    partial void OnBRN_BRG_IDChanging(System.Nullable<int> value);
    partial void OnBRN_BRG_IDChanged();
    partial void OnBRN_IsActiveChanging(bool value);
    partial void OnBRN_IsActiveChanged();
    partial void OnBRN_OPRT_IDChanging(System.Nullable<int> value);
    partial void OnBRN_OPRT_IDChanged();
    partial void OnBRN_IsUOChanging(System.Nullable<byte> value);
    partial void OnBRN_IsUOChanged();
    partial void OnBRN_IsExternalAccountChanging(System.Nullable<byte> value);
    partial void OnBRN_IsExternalAccountChanged();
    partial void OnBRN_DefaultNTSWizardConfigurationIDChanging(System.Nullable<int> value);
    partial void OnBRN_DefaultNTSWizardConfigurationIDChanged();
    partial void OnBRN_DefaultStatusCodeChanging(System.Nullable<short> value);
    partial void OnBRN_DefaultStatusCodeChanged();
    partial void OnBRN_DefaultOrientationChanging(byte value);
    partial void OnBRN_DefaultOrientationChanged();
    partial void OnBRN_IsNonP2PWin2BRChanging(System.Nullable<byte> value);
    partial void OnBRN_IsNonP2PWin2BRChanged();
    partial void OnBRN_KeepWinningsOnExpirationChanging(System.Nullable<bool> value);
    partial void OnBRN_KeepWinningsOnExpirationChanged();
    partial void OnBRN_IsRegulatedChanging(System.Nullable<byte> value);
    partial void OnBRN_IsRegulatedChanged();
    partial void OnBRN_RGLT_IDChanging(System.Nullable<byte> value);
    partial void OnBRN_RGLT_IDChanged();
    partial void OnBRN_IsDepositWRNeededChanging(System.Nullable<byte> value);
    partial void OnBRN_IsDepositWRNeededChanged();
    partial void OnBRN_MaxActiveAccountsAllowedPerTaxIdChanging(System.Nullable<byte> value);
    partial void OnBRN_MaxActiveAccountsAllowedPerTaxIdChanged();
    partial void OnBRN_Licensee_IDChanging(System.Nullable<short> value);
    partial void OnBRN_Licensee_IDChanged();
    partial void OnBRN_Network_IDChanging(System.Nullable<short> value);
    partial void OnBRN_Network_IDChanged();
    partial void OnBRN_LoginTokenExpirationMinutesChanging(System.Nullable<int> value);
    partial void OnBRN_LoginTokenExpirationMinutesChanged();
    partial void OnBRN_ToCalculateDaysToUploadDocsChanging(System.Nullable<bool> value);
    partial void OnBRN_ToCalculateDaysToUploadDocsChanged();
    partial void OnBRN_RestrictProxyInLoginChanging(System.Nullable<int> value);
    partial void OnBRN_RestrictProxyInLoginChanged();
    partial void OnBRN_RestrictProxyInRegistrationChanging(bool value);
    partial void OnBRN_RestrictProxyInRegistrationChanged();
    partial void OnBRN_PLRVerificationNeededChanging(bool value);
    partial void OnBRN_PLRVerificationNeededChanged();
    partial void OnBRN_DC_DataCenterIDChanging(byte value);
    partial void OnBRN_DC_DataCenterIDChanged();
    partial void OnBRN_DailyRenewalLimitChanging(System.Nullable<int> value);
    partial void OnBRN_DailyRenewalLimitChanged();
    partial void OnBRN_LimitationPeriodChanging(System.Nullable<int> value);
    partial void OnBRN_LimitationPeriodChanged();
    partial void OnBRN_GEO_SMS_ConfigurationChanging(System.Xml.Linq.XElement value);
    partial void OnBRN_GEO_SMS_ConfigurationChanged();
    partial void OnBRN_SocialNetwork_ConfigurationChanging(System.Xml.Linq.XElement value);
    partial void OnBRN_SocialNetwork_ConfigurationChanged();
    partial void OnBRN_RegistrationConfigurationChanging(System.Xml.Linq.XElement value);
    partial void OnBRN_RegistrationConfigurationChanged();
    partial void OnBRN_TermsConditionsVersionChanging(string value);
    partial void OnBRN_TermsConditionsVersionChanged();
    partial void OnBRN_ENV_IDChanging(System.Nullable<byte> value);
    partial void OnBRN_ENV_IDChanged();
    partial void OnBRN_URLChanging(string value);
    partial void OnBRN_URLChanged();
    partial void OnBRN_RoamingProtectionLevelChanging(System.Nullable<byte> value);
    partial void OnBRN_RoamingProtectionLevelChanged();
    partial void OnBRN_ExtraDataChanging(System.Xml.Linq.XElement value);
    partial void OnBRN_ExtraDataChanged();
    partial void OnBRN_PixelTrackingMethodChanging(System.Nullable<int> value);
    partial void OnBRN_PixelTrackingMethodChanged();
    partial void OnBRN_IgnoreContributionFromRestrictedMoneyChanging(bool value);
    partial void OnBRN_IgnoreContributionFromRestrictedMoneyChanged();
    partial void OnBRN_UpsellConfiguration_IsDoubleOfferChanging(System.Nullable<bool> value);
    partial void OnBRN_UpsellConfiguration_IsDoubleOfferChanged();
    partial void OnBRN_LP_IDChanging(System.Nullable<short> value);
    partial void OnBRN_LP_IDChanged();
    partial void OnBRN_CashRedemptionPermittedChanging(System.Nullable<bool> value);
    partial void OnBRN_CashRedemptionPermittedChanged();
    partial void OnBRN_CURR_AlphaChanging(string value);
    partial void OnBRN_CURR_AlphaChanged();
    partial void OnBRN_RM_ConfigurationsChanging(System.Xml.Linq.XElement value);
    partial void OnBRN_RM_ConfigurationsChanged();
    partial void OnBRN_ShowLOLDataChanging(bool value);
    partial void OnBRN_ShowLOLDataChanged();
    partial void OnBRN_LOLUpdates_via_DiffusionChanging(bool value);
    partial void OnBRN_LOLUpdates_via_DiffusionChanged();
    #endregion
		
		public Brand()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BRN_ID
		{
			get
			{
				return this._BRN_ID;
			}
			set
			{
				if ((this._BRN_ID != value))
				{
					this.OnBRN_IDChanging(value);
					this.SendPropertyChanging();
					this._BRN_ID = value;
					this.SendPropertyChanged("BRN_ID");
					this.OnBRN_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_FullName", DbType="VarChar(50)")]
		public string BRN_FullName
		{
			get
			{
				return this._BRN_FullName;
			}
			set
			{
				if ((this._BRN_FullName != value))
				{
					this.OnBRN_FullNameChanging(value);
					this.SendPropertyChanging();
					this._BRN_FullName = value;
					this.SendPropertyChanged("BRN_FullName");
					this.OnBRN_FullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_ShortName", DbType="VarChar(10)")]
		public string BRN_ShortName
		{
			get
			{
				return this._BRN_ShortName;
			}
			set
			{
				if ((this._BRN_ShortName != value))
				{
					this.OnBRN_ShortNameChanging(value);
					this.SendPropertyChanging();
					this._BRN_ShortName = value;
					this.SendPropertyChanged("BRN_ShortName");
					this.OnBRN_ShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_BRG_ID", DbType="Int")]
		public System.Nullable<int> BRN_BRG_ID
		{
			get
			{
				return this._BRN_BRG_ID;
			}
			set
			{
				if ((this._BRN_BRG_ID != value))
				{
					this.OnBRN_BRG_IDChanging(value);
					this.SendPropertyChanging();
					this._BRN_BRG_ID = value;
					this.SendPropertyChanged("BRN_BRG_ID");
					this.OnBRN_BRG_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_IsActive", DbType="Bit NOT NULL")]
		public bool BRN_IsActive
		{
			get
			{
				return this._BRN_IsActive;
			}
			set
			{
				if ((this._BRN_IsActive != value))
				{
					this.OnBRN_IsActiveChanging(value);
					this.SendPropertyChanging();
					this._BRN_IsActive = value;
					this.SendPropertyChanged("BRN_IsActive");
					this.OnBRN_IsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_OPRT_ID", DbType="Int")]
		public System.Nullable<int> BRN_OPRT_ID
		{
			get
			{
				return this._BRN_OPRT_ID;
			}
			set
			{
				if ((this._BRN_OPRT_ID != value))
				{
					this.OnBRN_OPRT_IDChanging(value);
					this.SendPropertyChanging();
					this._BRN_OPRT_ID = value;
					this.SendPropertyChanged("BRN_OPRT_ID");
					this.OnBRN_OPRT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_IsUO", DbType="TinyInt")]
		public System.Nullable<byte> BRN_IsUO
		{
			get
			{
				return this._BRN_IsUO;
			}
			set
			{
				if ((this._BRN_IsUO != value))
				{
					this.OnBRN_IsUOChanging(value);
					this.SendPropertyChanging();
					this._BRN_IsUO = value;
					this.SendPropertyChanged("BRN_IsUO");
					this.OnBRN_IsUOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_IsExternalAccount", DbType="TinyInt")]
		public System.Nullable<byte> BRN_IsExternalAccount
		{
			get
			{
				return this._BRN_IsExternalAccount;
			}
			set
			{
				if ((this._BRN_IsExternalAccount != value))
				{
					this.OnBRN_IsExternalAccountChanging(value);
					this.SendPropertyChanging();
					this._BRN_IsExternalAccount = value;
					this.SendPropertyChanged("BRN_IsExternalAccount");
					this.OnBRN_IsExternalAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_DefaultNTSWizardConfigurationID", DbType="Int")]
		public System.Nullable<int> BRN_DefaultNTSWizardConfigurationID
		{
			get
			{
				return this._BRN_DefaultNTSWizardConfigurationID;
			}
			set
			{
				if ((this._BRN_DefaultNTSWizardConfigurationID != value))
				{
					this.OnBRN_DefaultNTSWizardConfigurationIDChanging(value);
					this.SendPropertyChanging();
					this._BRN_DefaultNTSWizardConfigurationID = value;
					this.SendPropertyChanged("BRN_DefaultNTSWizardConfigurationID");
					this.OnBRN_DefaultNTSWizardConfigurationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_DefaultStatusCode", DbType="SmallInt")]
		public System.Nullable<short> BRN_DefaultStatusCode
		{
			get
			{
				return this._BRN_DefaultStatusCode;
			}
			set
			{
				if ((this._BRN_DefaultStatusCode != value))
				{
					this.OnBRN_DefaultStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._BRN_DefaultStatusCode = value;
					this.SendPropertyChanged("BRN_DefaultStatusCode");
					this.OnBRN_DefaultStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_DefaultOrientation", DbType="TinyInt NOT NULL")]
		public byte BRN_DefaultOrientation
		{
			get
			{
				return this._BRN_DefaultOrientation;
			}
			set
			{
				if ((this._BRN_DefaultOrientation != value))
				{
					this.OnBRN_DefaultOrientationChanging(value);
					this.SendPropertyChanging();
					this._BRN_DefaultOrientation = value;
					this.SendPropertyChanged("BRN_DefaultOrientation");
					this.OnBRN_DefaultOrientationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_IsNonP2PWin2BR", DbType="TinyInt")]
		public System.Nullable<byte> BRN_IsNonP2PWin2BR
		{
			get
			{
				return this._BRN_IsNonP2PWin2BR;
			}
			set
			{
				if ((this._BRN_IsNonP2PWin2BR != value))
				{
					this.OnBRN_IsNonP2PWin2BRChanging(value);
					this.SendPropertyChanging();
					this._BRN_IsNonP2PWin2BR = value;
					this.SendPropertyChanged("BRN_IsNonP2PWin2BR");
					this.OnBRN_IsNonP2PWin2BRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_KeepWinningsOnExpiration", DbType="Bit")]
		public System.Nullable<bool> BRN_KeepWinningsOnExpiration
		{
			get
			{
				return this._BRN_KeepWinningsOnExpiration;
			}
			set
			{
				if ((this._BRN_KeepWinningsOnExpiration != value))
				{
					this.OnBRN_KeepWinningsOnExpirationChanging(value);
					this.SendPropertyChanging();
					this._BRN_KeepWinningsOnExpiration = value;
					this.SendPropertyChanged("BRN_KeepWinningsOnExpiration");
					this.OnBRN_KeepWinningsOnExpirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_IsRegulated", DbType="TinyInt")]
		public System.Nullable<byte> BRN_IsRegulated
		{
			get
			{
				return this._BRN_IsRegulated;
			}
			set
			{
				if ((this._BRN_IsRegulated != value))
				{
					this.OnBRN_IsRegulatedChanging(value);
					this.SendPropertyChanging();
					this._BRN_IsRegulated = value;
					this.SendPropertyChanged("BRN_IsRegulated");
					this.OnBRN_IsRegulatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_RGLT_ID", DbType="TinyInt")]
		public System.Nullable<byte> BRN_RGLT_ID
		{
			get
			{
				return this._BRN_RGLT_ID;
			}
			set
			{
				if ((this._BRN_RGLT_ID != value))
				{
					this.OnBRN_RGLT_IDChanging(value);
					this.SendPropertyChanging();
					this._BRN_RGLT_ID = value;
					this.SendPropertyChanged("BRN_RGLT_ID");
					this.OnBRN_RGLT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_IsDepositWRNeeded", DbType="TinyInt")]
		public System.Nullable<byte> BRN_IsDepositWRNeeded
		{
			get
			{
				return this._BRN_IsDepositWRNeeded;
			}
			set
			{
				if ((this._BRN_IsDepositWRNeeded != value))
				{
					this.OnBRN_IsDepositWRNeededChanging(value);
					this.SendPropertyChanging();
					this._BRN_IsDepositWRNeeded = value;
					this.SendPropertyChanged("BRN_IsDepositWRNeeded");
					this.OnBRN_IsDepositWRNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_MaxActiveAccountsAllowedPerTaxId", DbType="TinyInt")]
		public System.Nullable<byte> BRN_MaxActiveAccountsAllowedPerTaxId
		{
			get
			{
				return this._BRN_MaxActiveAccountsAllowedPerTaxId;
			}
			set
			{
				if ((this._BRN_MaxActiveAccountsAllowedPerTaxId != value))
				{
					this.OnBRN_MaxActiveAccountsAllowedPerTaxIdChanging(value);
					this.SendPropertyChanging();
					this._BRN_MaxActiveAccountsAllowedPerTaxId = value;
					this.SendPropertyChanged("BRN_MaxActiveAccountsAllowedPerTaxId");
					this.OnBRN_MaxActiveAccountsAllowedPerTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_Licensee_ID", DbType="SmallInt")]
		public System.Nullable<short> BRN_Licensee_ID
		{
			get
			{
				return this._BRN_Licensee_ID;
			}
			set
			{
				if ((this._BRN_Licensee_ID != value))
				{
					this.OnBRN_Licensee_IDChanging(value);
					this.SendPropertyChanging();
					this._BRN_Licensee_ID = value;
					this.SendPropertyChanged("BRN_Licensee_ID");
					this.OnBRN_Licensee_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_Network_ID", DbType="SmallInt")]
		public System.Nullable<short> BRN_Network_ID
		{
			get
			{
				return this._BRN_Network_ID;
			}
			set
			{
				if ((this._BRN_Network_ID != value))
				{
					this.OnBRN_Network_IDChanging(value);
					this.SendPropertyChanging();
					this._BRN_Network_ID = value;
					this.SendPropertyChanged("BRN_Network_ID");
					this.OnBRN_Network_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_LoginTokenExpirationMinutes", DbType="Int")]
		public System.Nullable<int> BRN_LoginTokenExpirationMinutes
		{
			get
			{
				return this._BRN_LoginTokenExpirationMinutes;
			}
			set
			{
				if ((this._BRN_LoginTokenExpirationMinutes != value))
				{
					this.OnBRN_LoginTokenExpirationMinutesChanging(value);
					this.SendPropertyChanging();
					this._BRN_LoginTokenExpirationMinutes = value;
					this.SendPropertyChanged("BRN_LoginTokenExpirationMinutes");
					this.OnBRN_LoginTokenExpirationMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_ToCalculateDaysToUploadDocs", DbType="Bit")]
		public System.Nullable<bool> BRN_ToCalculateDaysToUploadDocs
		{
			get
			{
				return this._BRN_ToCalculateDaysToUploadDocs;
			}
			set
			{
				if ((this._BRN_ToCalculateDaysToUploadDocs != value))
				{
					this.OnBRN_ToCalculateDaysToUploadDocsChanging(value);
					this.SendPropertyChanging();
					this._BRN_ToCalculateDaysToUploadDocs = value;
					this.SendPropertyChanged("BRN_ToCalculateDaysToUploadDocs");
					this.OnBRN_ToCalculateDaysToUploadDocsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_RestrictProxyInLogin", DbType="Int")]
		public System.Nullable<int> BRN_RestrictProxyInLogin
		{
			get
			{
				return this._BRN_RestrictProxyInLogin;
			}
			set
			{
				if ((this._BRN_RestrictProxyInLogin != value))
				{
					this.OnBRN_RestrictProxyInLoginChanging(value);
					this.SendPropertyChanging();
					this._BRN_RestrictProxyInLogin = value;
					this.SendPropertyChanged("BRN_RestrictProxyInLogin");
					this.OnBRN_RestrictProxyInLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_RestrictProxyInRegistration", DbType="Bit NOT NULL")]
		public bool BRN_RestrictProxyInRegistration
		{
			get
			{
				return this._BRN_RestrictProxyInRegistration;
			}
			set
			{
				if ((this._BRN_RestrictProxyInRegistration != value))
				{
					this.OnBRN_RestrictProxyInRegistrationChanging(value);
					this.SendPropertyChanging();
					this._BRN_RestrictProxyInRegistration = value;
					this.SendPropertyChanged("BRN_RestrictProxyInRegistration");
					this.OnBRN_RestrictProxyInRegistrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_PLRVerificationNeeded", DbType="Bit NOT NULL")]
		public bool BRN_PLRVerificationNeeded
		{
			get
			{
				return this._BRN_PLRVerificationNeeded;
			}
			set
			{
				if ((this._BRN_PLRVerificationNeeded != value))
				{
					this.OnBRN_PLRVerificationNeededChanging(value);
					this.SendPropertyChanging();
					this._BRN_PLRVerificationNeeded = value;
					this.SendPropertyChanged("BRN_PLRVerificationNeeded");
					this.OnBRN_PLRVerificationNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_DC_DataCenterID", DbType="TinyInt NOT NULL")]
		public byte BRN_DC_DataCenterID
		{
			get
			{
				return this._BRN_DC_DataCenterID;
			}
			set
			{
				if ((this._BRN_DC_DataCenterID != value))
				{
					this.OnBRN_DC_DataCenterIDChanging(value);
					this.SendPropertyChanging();
					this._BRN_DC_DataCenterID = value;
					this.SendPropertyChanged("BRN_DC_DataCenterID");
					this.OnBRN_DC_DataCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_DailyRenewalLimit", DbType="Int")]
		public System.Nullable<int> BRN_DailyRenewalLimit
		{
			get
			{
				return this._BRN_DailyRenewalLimit;
			}
			set
			{
				if ((this._BRN_DailyRenewalLimit != value))
				{
					this.OnBRN_DailyRenewalLimitChanging(value);
					this.SendPropertyChanging();
					this._BRN_DailyRenewalLimit = value;
					this.SendPropertyChanged("BRN_DailyRenewalLimit");
					this.OnBRN_DailyRenewalLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_LimitationPeriod", DbType="Int")]
		public System.Nullable<int> BRN_LimitationPeriod
		{
			get
			{
				return this._BRN_LimitationPeriod;
			}
			set
			{
				if ((this._BRN_LimitationPeriod != value))
				{
					this.OnBRN_LimitationPeriodChanging(value);
					this.SendPropertyChanging();
					this._BRN_LimitationPeriod = value;
					this.SendPropertyChanged("BRN_LimitationPeriod");
					this.OnBRN_LimitationPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_GEO_SMS_Configuration", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement BRN_GEO_SMS_Configuration
		{
			get
			{
				return this._BRN_GEO_SMS_Configuration;
			}
			set
			{
				if ((this._BRN_GEO_SMS_Configuration != value))
				{
					this.OnBRN_GEO_SMS_ConfigurationChanging(value);
					this.SendPropertyChanging();
					this._BRN_GEO_SMS_Configuration = value;
					this.SendPropertyChanged("BRN_GEO_SMS_Configuration");
					this.OnBRN_GEO_SMS_ConfigurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_SocialNetwork_Configuration", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement BRN_SocialNetwork_Configuration
		{
			get
			{
				return this._BRN_SocialNetwork_Configuration;
			}
			set
			{
				if ((this._BRN_SocialNetwork_Configuration != value))
				{
					this.OnBRN_SocialNetwork_ConfigurationChanging(value);
					this.SendPropertyChanging();
					this._BRN_SocialNetwork_Configuration = value;
					this.SendPropertyChanged("BRN_SocialNetwork_Configuration");
					this.OnBRN_SocialNetwork_ConfigurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_RegistrationConfiguration", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement BRN_RegistrationConfiguration
		{
			get
			{
				return this._BRN_RegistrationConfiguration;
			}
			set
			{
				if ((this._BRN_RegistrationConfiguration != value))
				{
					this.OnBRN_RegistrationConfigurationChanging(value);
					this.SendPropertyChanging();
					this._BRN_RegistrationConfiguration = value;
					this.SendPropertyChanged("BRN_RegistrationConfiguration");
					this.OnBRN_RegistrationConfigurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_TermsConditionsVersion", DbType="VarChar(50)")]
		public string BRN_TermsConditionsVersion
		{
			get
			{
				return this._BRN_TermsConditionsVersion;
			}
			set
			{
				if ((this._BRN_TermsConditionsVersion != value))
				{
					this.OnBRN_TermsConditionsVersionChanging(value);
					this.SendPropertyChanging();
					this._BRN_TermsConditionsVersion = value;
					this.SendPropertyChanged("BRN_TermsConditionsVersion");
					this.OnBRN_TermsConditionsVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_ENV_ID", DbType="TinyInt")]
		public System.Nullable<byte> BRN_ENV_ID
		{
			get
			{
				return this._BRN_ENV_ID;
			}
			set
			{
				if ((this._BRN_ENV_ID != value))
				{
					this.OnBRN_ENV_IDChanging(value);
					this.SendPropertyChanging();
					this._BRN_ENV_ID = value;
					this.SendPropertyChanged("BRN_ENV_ID");
					this.OnBRN_ENV_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_URL", DbType="NVarChar(200)")]
		public string BRN_URL
		{
			get
			{
				return this._BRN_URL;
			}
			set
			{
				if ((this._BRN_URL != value))
				{
					this.OnBRN_URLChanging(value);
					this.SendPropertyChanging();
					this._BRN_URL = value;
					this.SendPropertyChanged("BRN_URL");
					this.OnBRN_URLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_RoamingProtectionLevel", DbType="TinyInt")]
		public System.Nullable<byte> BRN_RoamingProtectionLevel
		{
			get
			{
				return this._BRN_RoamingProtectionLevel;
			}
			set
			{
				if ((this._BRN_RoamingProtectionLevel != value))
				{
					this.OnBRN_RoamingProtectionLevelChanging(value);
					this.SendPropertyChanging();
					this._BRN_RoamingProtectionLevel = value;
					this.SendPropertyChanged("BRN_RoamingProtectionLevel");
					this.OnBRN_RoamingProtectionLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_ExtraData", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement BRN_ExtraData
		{
			get
			{
				return this._BRN_ExtraData;
			}
			set
			{
				if ((this._BRN_ExtraData != value))
				{
					this.OnBRN_ExtraDataChanging(value);
					this.SendPropertyChanging();
					this._BRN_ExtraData = value;
					this.SendPropertyChanged("BRN_ExtraData");
					this.OnBRN_ExtraDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_PixelTrackingMethod", DbType="Int")]
		public System.Nullable<int> BRN_PixelTrackingMethod
		{
			get
			{
				return this._BRN_PixelTrackingMethod;
			}
			set
			{
				if ((this._BRN_PixelTrackingMethod != value))
				{
					this.OnBRN_PixelTrackingMethodChanging(value);
					this.SendPropertyChanging();
					this._BRN_PixelTrackingMethod = value;
					this.SendPropertyChanged("BRN_PixelTrackingMethod");
					this.OnBRN_PixelTrackingMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_IgnoreContributionFromRestrictedMoney", DbType="Bit NOT NULL")]
		public bool BRN_IgnoreContributionFromRestrictedMoney
		{
			get
			{
				return this._BRN_IgnoreContributionFromRestrictedMoney;
			}
			set
			{
				if ((this._BRN_IgnoreContributionFromRestrictedMoney != value))
				{
					this.OnBRN_IgnoreContributionFromRestrictedMoneyChanging(value);
					this.SendPropertyChanging();
					this._BRN_IgnoreContributionFromRestrictedMoney = value;
					this.SendPropertyChanged("BRN_IgnoreContributionFromRestrictedMoney");
					this.OnBRN_IgnoreContributionFromRestrictedMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_UpsellConfiguration_IsDoubleOffer", DbType="Bit")]
		public System.Nullable<bool> BRN_UpsellConfiguration_IsDoubleOffer
		{
			get
			{
				return this._BRN_UpsellConfiguration_IsDoubleOffer;
			}
			set
			{
				if ((this._BRN_UpsellConfiguration_IsDoubleOffer != value))
				{
					this.OnBRN_UpsellConfiguration_IsDoubleOfferChanging(value);
					this.SendPropertyChanging();
					this._BRN_UpsellConfiguration_IsDoubleOffer = value;
					this.SendPropertyChanged("BRN_UpsellConfiguration_IsDoubleOffer");
					this.OnBRN_UpsellConfiguration_IsDoubleOfferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_LP_ID", DbType="SmallInt")]
		public System.Nullable<short> BRN_LP_ID
		{
			get
			{
				return this._BRN_LP_ID;
			}
			set
			{
				if ((this._BRN_LP_ID != value))
				{
					this.OnBRN_LP_IDChanging(value);
					this.SendPropertyChanging();
					this._BRN_LP_ID = value;
					this.SendPropertyChanged("BRN_LP_ID");
					this.OnBRN_LP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_CashRedemptionPermitted", DbType="Bit")]
		public System.Nullable<bool> BRN_CashRedemptionPermitted
		{
			get
			{
				return this._BRN_CashRedemptionPermitted;
			}
			set
			{
				if ((this._BRN_CashRedemptionPermitted != value))
				{
					this.OnBRN_CashRedemptionPermittedChanging(value);
					this.SendPropertyChanging();
					this._BRN_CashRedemptionPermitted = value;
					this.SendPropertyChanged("BRN_CashRedemptionPermitted");
					this.OnBRN_CashRedemptionPermittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_CURR_Alpha", DbType="NVarChar(3)")]
		public string BRN_CURR_Alpha
		{
			get
			{
				return this._BRN_CURR_Alpha;
			}
			set
			{
				if ((this._BRN_CURR_Alpha != value))
				{
					this.OnBRN_CURR_AlphaChanging(value);
					this.SendPropertyChanging();
					this._BRN_CURR_Alpha = value;
					this.SendPropertyChanged("BRN_CURR_Alpha");
					this.OnBRN_CURR_AlphaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_RM_Configurations", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement BRN_RM_Configurations
		{
			get
			{
				return this._BRN_RM_Configurations;
			}
			set
			{
				if ((this._BRN_RM_Configurations != value))
				{
					this.OnBRN_RM_ConfigurationsChanging(value);
					this.SendPropertyChanging();
					this._BRN_RM_Configurations = value;
					this.SendPropertyChanged("BRN_RM_Configurations");
					this.OnBRN_RM_ConfigurationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_ShowLOLData", DbType="Bit NOT NULL")]
		public bool BRN_ShowLOLData
		{
			get
			{
				return this._BRN_ShowLOLData;
			}
			set
			{
				if ((this._BRN_ShowLOLData != value))
				{
					this.OnBRN_ShowLOLDataChanging(value);
					this.SendPropertyChanging();
					this._BRN_ShowLOLData = value;
					this.SendPropertyChanged("BRN_ShowLOLData");
					this.OnBRN_ShowLOLDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRN_LOLUpdates_via_Diffusion", DbType="Bit NOT NULL")]
		public bool BRN_LOLUpdates_via_Diffusion
		{
			get
			{
				return this._BRN_LOLUpdates_via_Diffusion;
			}
			set
			{
				if ((this._BRN_LOLUpdates_via_Diffusion != value))
				{
					this.OnBRN_LOLUpdates_via_DiffusionChanging(value);
					this.SendPropertyChanging();
					this._BRN_LOLUpdates_via_Diffusion = value;
					this.SendPropertyChanged("BRN_LOLUpdates_via_Diffusion");
					this.OnBRN_LOLUpdates_via_DiffusionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="MD.[_Countries]")]
	public partial class Country
	{
		
		private int _CNT_ID;
		
		private System.Nullable<int> _CNT_NUM;
		
		private string _CNT_Name;
		
		private string _CNT_Country;
		
		private string _CNT_DISPLAY_NAME;
		
		private string _CNT_Region;
		
		private System.Nullable<int> _CNT_CTN_ID;
		
		private System.Nullable<int> _CNT_DFU_Enabled;
		
		private System.Nullable<int> _CNT_FLAGS;
		
		private System.Nullable<int> _CNT_DISPLAY_ORDER;
		
		private System.Nullable<int> _CNT_ISO_ID;
		
		private string _CNT_ISO_NAME;
		
		private string _CNT_ISO_ALPHA_2;
		
		private string _CNT_ISO_ALPHA_3;
		
		private System.Nullable<bool> _CNT_IsActive;
		
		private string _CNT_Name_Of_Citizenship;
		
		public Country()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNT_ID", DbType="Int NOT NULL")]
		public int CNT_ID
		{
			get
			{
				return this._CNT_ID;
			}
			set
			{
				if ((this._CNT_ID != value))
				{
					this._CNT_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNT_NUM", DbType="Int")]
		public System.Nullable<int> CNT_NUM
		{
			get
			{
				return this._CNT_NUM;
			}
			set
			{
				if ((this._CNT_NUM != value))
				{
					this._CNT_NUM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNT_Name", DbType="NVarChar(50)")]
		public string CNT_Name
		{
			get
			{
				return this._CNT_Name;
			}
			set
			{
				if ((this._CNT_Name != value))
				{
					this._CNT_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNT_Country", DbType="NVarChar(50)")]
		public string CNT_Country
		{
			get
			{
				return this._CNT_Country;
			}
			set
			{
				if ((this._CNT_Country != value))
				{
					this._CNT_Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNT_DISPLAY_NAME", DbType="VarChar(200)")]
		public string CNT_DISPLAY_NAME
		{
			get
			{
				return this._CNT_DISPLAY_NAME;
			}
			set
			{
				if ((this._CNT_DISPLAY_NAME != value))
				{
					this._CNT_DISPLAY_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNT_Region", DbType="VarChar(255)")]
		public string CNT_Region
		{
			get
			{
				return this._CNT_Region;
			}
			set
			{
				if ((this._CNT_Region != value))
				{
					this._CNT_Region = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNT_CTN_ID", DbType="Int")]
		public System.Nullable<int> CNT_CTN_ID
		{
			get
			{
				return this._CNT_CTN_ID;
			}
			set
			{
				if ((this._CNT_CTN_ID != value))
				{
					this._CNT_CTN_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNT_DFU_Enabled", DbType="Int")]
		public System.Nullable<int> CNT_DFU_Enabled
		{
			get
			{
				return this._CNT_DFU_Enabled;
			}
			set
			{
				if ((this._CNT_DFU_Enabled != value))
				{
					this._CNT_DFU_Enabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNT_FLAGS", DbType="Int")]
		public System.Nullable<int> CNT_FLAGS
		{
			get
			{
				return this._CNT_FLAGS;
			}
			set
			{
				if ((this._CNT_FLAGS != value))
				{
					this._CNT_FLAGS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNT_DISPLAY_ORDER", DbType="Int")]
		public System.Nullable<int> CNT_DISPLAY_ORDER
		{
			get
			{
				return this._CNT_DISPLAY_ORDER;
			}
			set
			{
				if ((this._CNT_DISPLAY_ORDER != value))
				{
					this._CNT_DISPLAY_ORDER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNT_ISO_ID", DbType="Int")]
		public System.Nullable<int> CNT_ISO_ID
		{
			get
			{
				return this._CNT_ISO_ID;
			}
			set
			{
				if ((this._CNT_ISO_ID != value))
				{
					this._CNT_ISO_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNT_ISO_NAME", DbType="VarChar(200)")]
		public string CNT_ISO_NAME
		{
			get
			{
				return this._CNT_ISO_NAME;
			}
			set
			{
				if ((this._CNT_ISO_NAME != value))
				{
					this._CNT_ISO_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNT_ISO_ALPHA_2", DbType="VarChar(2)")]
		public string CNT_ISO_ALPHA_2
		{
			get
			{
				return this._CNT_ISO_ALPHA_2;
			}
			set
			{
				if ((this._CNT_ISO_ALPHA_2 != value))
				{
					this._CNT_ISO_ALPHA_2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNT_ISO_ALPHA_3", DbType="VarChar(3)")]
		public string CNT_ISO_ALPHA_3
		{
			get
			{
				return this._CNT_ISO_ALPHA_3;
			}
			set
			{
				if ((this._CNT_ISO_ALPHA_3 != value))
				{
					this._CNT_ISO_ALPHA_3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNT_IsActive", DbType="Bit")]
		public System.Nullable<bool> CNT_IsActive
		{
			get
			{
				return this._CNT_IsActive;
			}
			set
			{
				if ((this._CNT_IsActive != value))
				{
					this._CNT_IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNT_Name_Of_Citizenship", DbType="NVarChar(50)")]
		public string CNT_Name_Of_Citizenship
		{
			get
			{
				return this._CNT_Name_Of_Citizenship;
			}
			set
			{
				if ((this._CNT_Name_Of_Citizenship != value))
				{
					this._CNT_Name_Of_Citizenship = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="MD.[_Currencies]")]
	public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _CUR_ID;
		
		private string _CUR_Name;
		
		private string _CUR_Short_Name;
		
		private string _CUR_Lookup_Name;
		
		private string _CUR_Symbol;
		
		private System.Nullable<double> _CUR_Rate;
		
		private int _CURR_ISO_ID;
		
		private bool _CURR_is_nts;
		
		private string _CURR_Alpha;
		
		private System.Nullable<bool> _CURR_IsPoker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCUR_IDChanging(System.Nullable<int> value);
    partial void OnCUR_IDChanged();
    partial void OnCUR_NameChanging(string value);
    partial void OnCUR_NameChanged();
    partial void OnCUR_Short_NameChanging(string value);
    partial void OnCUR_Short_NameChanged();
    partial void OnCUR_Lookup_NameChanging(string value);
    partial void OnCUR_Lookup_NameChanged();
    partial void OnCUR_SymbolChanging(string value);
    partial void OnCUR_SymbolChanged();
    partial void OnCUR_RateChanging(System.Nullable<double> value);
    partial void OnCUR_RateChanged();
    partial void OnCURR_ISO_IDChanging(int value);
    partial void OnCURR_ISO_IDChanged();
    partial void OnCURR_is_ntsChanging(bool value);
    partial void OnCURR_is_ntsChanged();
    partial void OnCURR_AlphaChanging(string value);
    partial void OnCURR_AlphaChanged();
    partial void OnCURR_IsPokerChanging(System.Nullable<bool> value);
    partial void OnCURR_IsPokerChanged();
    #endregion
		
		public Currency()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUR_ID", DbType="Int")]
		public System.Nullable<int> CUR_ID
		{
			get
			{
				return this._CUR_ID;
			}
			set
			{
				if ((this._CUR_ID != value))
				{
					this.OnCUR_IDChanging(value);
					this.SendPropertyChanging();
					this._CUR_ID = value;
					this.SendPropertyChanged("CUR_ID");
					this.OnCUR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUR_Name", DbType="NVarChar(50)")]
		public string CUR_Name
		{
			get
			{
				return this._CUR_Name;
			}
			set
			{
				if ((this._CUR_Name != value))
				{
					this.OnCUR_NameChanging(value);
					this.SendPropertyChanging();
					this._CUR_Name = value;
					this.SendPropertyChanged("CUR_Name");
					this.OnCUR_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUR_Short_Name", DbType="NVarChar(3)")]
		public string CUR_Short_Name
		{
			get
			{
				return this._CUR_Short_Name;
			}
			set
			{
				if ((this._CUR_Short_Name != value))
				{
					this.OnCUR_Short_NameChanging(value);
					this.SendPropertyChanging();
					this._CUR_Short_Name = value;
					this.SendPropertyChanged("CUR_Short_Name");
					this.OnCUR_Short_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUR_Lookup_Name", DbType="NVarChar(3)")]
		public string CUR_Lookup_Name
		{
			get
			{
				return this._CUR_Lookup_Name;
			}
			set
			{
				if ((this._CUR_Lookup_Name != value))
				{
					this.OnCUR_Lookup_NameChanging(value);
					this.SendPropertyChanging();
					this._CUR_Lookup_Name = value;
					this.SendPropertyChanged("CUR_Lookup_Name");
					this.OnCUR_Lookup_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUR_Symbol", DbType="NChar(10)")]
		public string CUR_Symbol
		{
			get
			{
				return this._CUR_Symbol;
			}
			set
			{
				if ((this._CUR_Symbol != value))
				{
					this.OnCUR_SymbolChanging(value);
					this.SendPropertyChanging();
					this._CUR_Symbol = value;
					this.SendPropertyChanged("CUR_Symbol");
					this.OnCUR_SymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUR_Rate", DbType="Float")]
		public System.Nullable<double> CUR_Rate
		{
			get
			{
				return this._CUR_Rate;
			}
			set
			{
				if ((this._CUR_Rate != value))
				{
					this.OnCUR_RateChanging(value);
					this.SendPropertyChanging();
					this._CUR_Rate = value;
					this.SendPropertyChanged("CUR_Rate");
					this.OnCUR_RateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURR_ISO_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CURR_ISO_ID
		{
			get
			{
				return this._CURR_ISO_ID;
			}
			set
			{
				if ((this._CURR_ISO_ID != value))
				{
					this.OnCURR_ISO_IDChanging(value);
					this.SendPropertyChanging();
					this._CURR_ISO_ID = value;
					this.SendPropertyChanged("CURR_ISO_ID");
					this.OnCURR_ISO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURR_is_nts", DbType="Bit NOT NULL")]
		public bool CURR_is_nts
		{
			get
			{
				return this._CURR_is_nts;
			}
			set
			{
				if ((this._CURR_is_nts != value))
				{
					this.OnCURR_is_ntsChanging(value);
					this.SendPropertyChanging();
					this._CURR_is_nts = value;
					this.SendPropertyChanged("CURR_is_nts");
					this.OnCURR_is_ntsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURR_Alpha", DbType="NVarChar(3)")]
		public string CURR_Alpha
		{
			get
			{
				return this._CURR_Alpha;
			}
			set
			{
				if ((this._CURR_Alpha != value))
				{
					this.OnCURR_AlphaChanging(value);
					this.SendPropertyChanging();
					this._CURR_Alpha = value;
					this.SendPropertyChanged("CURR_Alpha");
					this.OnCURR_AlphaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURR_IsPoker", DbType="Bit")]
		public System.Nullable<bool> CURR_IsPoker
		{
			get
			{
				return this._CURR_IsPoker;
			}
			set
			{
				if ((this._CURR_IsPoker != value))
				{
					this.OnCURR_IsPokerChanging(value);
					this.SendPropertyChanging();
					this._CURR_IsPoker = value;
					this.SendPropertyChanged("CURR_IsPoker");
					this.OnCURR_IsPokerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="MD.[_GameTypes]")]
	public partial class GameType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GMT_ID;
		
		private int _GMT_GroupID;
		
		private byte _GMT_GCT_ID;
		
		private string _GMT_Group;
		
		private string _GMT_Description;
		
		private System.Nullable<int> _GMT_GS_ID;
		
		private System.Nullable<int> _SL_GMT_ID;
		
		private byte _GMT_IsActive;
		
		private System.Nullable<short> _GMT_CMP_ID;
		
		private System.Xml.Linq.XElement _GMT_Properties;
		
		private System.Xml.Linq.XElement _GMT_BPMperBrand;
		
		private System.Nullable<int> _GMT_GV_VendorID;
		
		private System.Nullable<int> _GMT_RLV_ID;
		
		private System.Nullable<int> _GMT_DelayTime;
		
		private int _GMT_FreePlayTypeID;
		
		private System.Nullable<byte> _GMT_isP2P;
		
		private System.Xml.Linq.XElement _GMT_GameAttributes;
		
		private System.Xml.Linq.XElement _GMT_MinBet;
		
		private bool _GMT_IgnoreContributionFromRestrictedMoney;
		
		private System.Nullable<short> _GMT_CPR_ID;
		
		private System.Nullable<bool> _GMT_HasJP;
		
		private System.Xml.Linq.XElement _GMT_GameDefinitions;
		
		private System.Xml.Linq.XElement _GMT_MaxBet;
		
		private System.Nullable<bool> _GMT_IsOGS;
		
		private System.Nullable<byte> _GMT_PT_ID;
		
		private System.Nullable<byte> _GMT_IsNotSimplifiedIntegration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGMT_IDChanging(int value);
    partial void OnGMT_IDChanged();
    partial void OnGMT_GroupIDChanging(int value);
    partial void OnGMT_GroupIDChanged();
    partial void OnGMT_GCT_IDChanging(byte value);
    partial void OnGMT_GCT_IDChanged();
    partial void OnGMT_GroupChanging(string value);
    partial void OnGMT_GroupChanged();
    partial void OnGMT_DescriptionChanging(string value);
    partial void OnGMT_DescriptionChanged();
    partial void OnGMT_GS_IDChanging(System.Nullable<int> value);
    partial void OnGMT_GS_IDChanged();
    partial void OnSL_GMT_IDChanging(System.Nullable<int> value);
    partial void OnSL_GMT_IDChanged();
    partial void OnGMT_IsActiveChanging(byte value);
    partial void OnGMT_IsActiveChanged();
    partial void OnGMT_CMP_IDChanging(System.Nullable<short> value);
    partial void OnGMT_CMP_IDChanged();
    partial void OnGMT_PropertiesChanging(System.Xml.Linq.XElement value);
    partial void OnGMT_PropertiesChanged();
    partial void OnGMT_BPMperBrandChanging(System.Xml.Linq.XElement value);
    partial void OnGMT_BPMperBrandChanged();
    partial void OnGMT_GV_VendorIDChanging(System.Nullable<int> value);
    partial void OnGMT_GV_VendorIDChanged();
    partial void OnGMT_RLV_IDChanging(System.Nullable<int> value);
    partial void OnGMT_RLV_IDChanged();
    partial void OnGMT_DelayTimeChanging(System.Nullable<int> value);
    partial void OnGMT_DelayTimeChanged();
    partial void OnGMT_FreePlayTypeIDChanging(int value);
    partial void OnGMT_FreePlayTypeIDChanged();
    partial void OnGMT_isP2PChanging(System.Nullable<byte> value);
    partial void OnGMT_isP2PChanged();
    partial void OnGMT_GameAttributesChanging(System.Xml.Linq.XElement value);
    partial void OnGMT_GameAttributesChanged();
    partial void OnGMT_MinBetChanging(System.Xml.Linq.XElement value);
    partial void OnGMT_MinBetChanged();
    partial void OnGMT_IgnoreContributionFromRestrictedMoneyChanging(bool value);
    partial void OnGMT_IgnoreContributionFromRestrictedMoneyChanged();
    partial void OnGMT_CPR_IDChanging(System.Nullable<short> value);
    partial void OnGMT_CPR_IDChanged();
    partial void OnGMT_HasJPChanging(System.Nullable<bool> value);
    partial void OnGMT_HasJPChanged();
    partial void OnGMT_GameDefinitionsChanging(System.Xml.Linq.XElement value);
    partial void OnGMT_GameDefinitionsChanged();
    partial void OnGMT_MaxBetChanging(System.Xml.Linq.XElement value);
    partial void OnGMT_MaxBetChanged();
    partial void OnGMT_IsOGSChanging(System.Nullable<bool> value);
    partial void OnGMT_IsOGSChanged();
    partial void OnGMT_PT_IDChanging(System.Nullable<byte> value);
    partial void OnGMT_PT_IDChanged();
    partial void OnGMT_IsNotSimplifiedIntegrationChanging(System.Nullable<byte> value);
    partial void OnGMT_IsNotSimplifiedIntegrationChanged();
    #endregion
		
		public GameType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GMT_ID
		{
			get
			{
				return this._GMT_ID;
			}
			set
			{
				if ((this._GMT_ID != value))
				{
					this.OnGMT_IDChanging(value);
					this.SendPropertyChanging();
					this._GMT_ID = value;
					this.SendPropertyChanged("GMT_ID");
					this.OnGMT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_GroupID", DbType="Int NOT NULL")]
		public int GMT_GroupID
		{
			get
			{
				return this._GMT_GroupID;
			}
			set
			{
				if ((this._GMT_GroupID != value))
				{
					this.OnGMT_GroupIDChanging(value);
					this.SendPropertyChanging();
					this._GMT_GroupID = value;
					this.SendPropertyChanged("GMT_GroupID");
					this.OnGMT_GroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_GCT_ID", DbType="TinyInt NOT NULL")]
		public byte GMT_GCT_ID
		{
			get
			{
				return this._GMT_GCT_ID;
			}
			set
			{
				if ((this._GMT_GCT_ID != value))
				{
					this.OnGMT_GCT_IDChanging(value);
					this.SendPropertyChanging();
					this._GMT_GCT_ID = value;
					this.SendPropertyChanged("GMT_GCT_ID");
					this.OnGMT_GCT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_Group", DbType="VarChar(50)")]
		public string GMT_Group
		{
			get
			{
				return this._GMT_Group;
			}
			set
			{
				if ((this._GMT_Group != value))
				{
					this.OnGMT_GroupChanging(value);
					this.SendPropertyChanging();
					this._GMT_Group = value;
					this.SendPropertyChanged("GMT_Group");
					this.OnGMT_GroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_Description", DbType="VarChar(1000)")]
		public string GMT_Description
		{
			get
			{
				return this._GMT_Description;
			}
			set
			{
				if ((this._GMT_Description != value))
				{
					this.OnGMT_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._GMT_Description = value;
					this.SendPropertyChanged("GMT_Description");
					this.OnGMT_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_GS_ID", DbType="Int")]
		public System.Nullable<int> GMT_GS_ID
		{
			get
			{
				return this._GMT_GS_ID;
			}
			set
			{
				if ((this._GMT_GS_ID != value))
				{
					this.OnGMT_GS_IDChanging(value);
					this.SendPropertyChanging();
					this._GMT_GS_ID = value;
					this.SendPropertyChanged("GMT_GS_ID");
					this.OnGMT_GS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_GMT_ID", DbType="Int")]
		public System.Nullable<int> SL_GMT_ID
		{
			get
			{
				return this._SL_GMT_ID;
			}
			set
			{
				if ((this._SL_GMT_ID != value))
				{
					this.OnSL_GMT_IDChanging(value);
					this.SendPropertyChanging();
					this._SL_GMT_ID = value;
					this.SendPropertyChanged("SL_GMT_ID");
					this.OnSL_GMT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_IsActive", DbType="TinyInt NOT NULL")]
		public byte GMT_IsActive
		{
			get
			{
				return this._GMT_IsActive;
			}
			set
			{
				if ((this._GMT_IsActive != value))
				{
					this.OnGMT_IsActiveChanging(value);
					this.SendPropertyChanging();
					this._GMT_IsActive = value;
					this.SendPropertyChanged("GMT_IsActive");
					this.OnGMT_IsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_CMP_ID", DbType="SmallInt")]
		public System.Nullable<short> GMT_CMP_ID
		{
			get
			{
				return this._GMT_CMP_ID;
			}
			set
			{
				if ((this._GMT_CMP_ID != value))
				{
					this.OnGMT_CMP_IDChanging(value);
					this.SendPropertyChanging();
					this._GMT_CMP_ID = value;
					this.SendPropertyChanged("GMT_CMP_ID");
					this.OnGMT_CMP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_Properties", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement GMT_Properties
		{
			get
			{
				return this._GMT_Properties;
			}
			set
			{
				if ((this._GMT_Properties != value))
				{
					this.OnGMT_PropertiesChanging(value);
					this.SendPropertyChanging();
					this._GMT_Properties = value;
					this.SendPropertyChanged("GMT_Properties");
					this.OnGMT_PropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_BPMperBrand", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement GMT_BPMperBrand
		{
			get
			{
				return this._GMT_BPMperBrand;
			}
			set
			{
				if ((this._GMT_BPMperBrand != value))
				{
					this.OnGMT_BPMperBrandChanging(value);
					this.SendPropertyChanging();
					this._GMT_BPMperBrand = value;
					this.SendPropertyChanged("GMT_BPMperBrand");
					this.OnGMT_BPMperBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_GV_VendorID", DbType="Int")]
		public System.Nullable<int> GMT_GV_VendorID
		{
			get
			{
				return this._GMT_GV_VendorID;
			}
			set
			{
				if ((this._GMT_GV_VendorID != value))
				{
					this.OnGMT_GV_VendorIDChanging(value);
					this.SendPropertyChanging();
					this._GMT_GV_VendorID = value;
					this.SendPropertyChanged("GMT_GV_VendorID");
					this.OnGMT_GV_VendorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_RLV_ID", DbType="Int")]
		public System.Nullable<int> GMT_RLV_ID
		{
			get
			{
				return this._GMT_RLV_ID;
			}
			set
			{
				if ((this._GMT_RLV_ID != value))
				{
					this.OnGMT_RLV_IDChanging(value);
					this.SendPropertyChanging();
					this._GMT_RLV_ID = value;
					this.SendPropertyChanged("GMT_RLV_ID");
					this.OnGMT_RLV_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_DelayTime", DbType="Int")]
		public System.Nullable<int> GMT_DelayTime
		{
			get
			{
				return this._GMT_DelayTime;
			}
			set
			{
				if ((this._GMT_DelayTime != value))
				{
					this.OnGMT_DelayTimeChanging(value);
					this.SendPropertyChanging();
					this._GMT_DelayTime = value;
					this.SendPropertyChanged("GMT_DelayTime");
					this.OnGMT_DelayTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_FreePlayTypeID", DbType="Int NOT NULL")]
		public int GMT_FreePlayTypeID
		{
			get
			{
				return this._GMT_FreePlayTypeID;
			}
			set
			{
				if ((this._GMT_FreePlayTypeID != value))
				{
					this.OnGMT_FreePlayTypeIDChanging(value);
					this.SendPropertyChanging();
					this._GMT_FreePlayTypeID = value;
					this.SendPropertyChanged("GMT_FreePlayTypeID");
					this.OnGMT_FreePlayTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_isP2P", DbType="TinyInt")]
		public System.Nullable<byte> GMT_isP2P
		{
			get
			{
				return this._GMT_isP2P;
			}
			set
			{
				if ((this._GMT_isP2P != value))
				{
					this.OnGMT_isP2PChanging(value);
					this.SendPropertyChanging();
					this._GMT_isP2P = value;
					this.SendPropertyChanged("GMT_isP2P");
					this.OnGMT_isP2PChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_GameAttributes", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement GMT_GameAttributes
		{
			get
			{
				return this._GMT_GameAttributes;
			}
			set
			{
				if ((this._GMT_GameAttributes != value))
				{
					this.OnGMT_GameAttributesChanging(value);
					this.SendPropertyChanging();
					this._GMT_GameAttributes = value;
					this.SendPropertyChanged("GMT_GameAttributes");
					this.OnGMT_GameAttributesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_MinBet", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement GMT_MinBet
		{
			get
			{
				return this._GMT_MinBet;
			}
			set
			{
				if ((this._GMT_MinBet != value))
				{
					this.OnGMT_MinBetChanging(value);
					this.SendPropertyChanging();
					this._GMT_MinBet = value;
					this.SendPropertyChanged("GMT_MinBet");
					this.OnGMT_MinBetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_IgnoreContributionFromRestrictedMoney", DbType="Bit NOT NULL")]
		public bool GMT_IgnoreContributionFromRestrictedMoney
		{
			get
			{
				return this._GMT_IgnoreContributionFromRestrictedMoney;
			}
			set
			{
				if ((this._GMT_IgnoreContributionFromRestrictedMoney != value))
				{
					this.OnGMT_IgnoreContributionFromRestrictedMoneyChanging(value);
					this.SendPropertyChanging();
					this._GMT_IgnoreContributionFromRestrictedMoney = value;
					this.SendPropertyChanged("GMT_IgnoreContributionFromRestrictedMoney");
					this.OnGMT_IgnoreContributionFromRestrictedMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_CPR_ID", DbType="SmallInt")]
		public System.Nullable<short> GMT_CPR_ID
		{
			get
			{
				return this._GMT_CPR_ID;
			}
			set
			{
				if ((this._GMT_CPR_ID != value))
				{
					this.OnGMT_CPR_IDChanging(value);
					this.SendPropertyChanging();
					this._GMT_CPR_ID = value;
					this.SendPropertyChanged("GMT_CPR_ID");
					this.OnGMT_CPR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_HasJP", DbType="Bit")]
		public System.Nullable<bool> GMT_HasJP
		{
			get
			{
				return this._GMT_HasJP;
			}
			set
			{
				if ((this._GMT_HasJP != value))
				{
					this.OnGMT_HasJPChanging(value);
					this.SendPropertyChanging();
					this._GMT_HasJP = value;
					this.SendPropertyChanged("GMT_HasJP");
					this.OnGMT_HasJPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_GameDefinitions", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement GMT_GameDefinitions
		{
			get
			{
				return this._GMT_GameDefinitions;
			}
			set
			{
				if ((this._GMT_GameDefinitions != value))
				{
					this.OnGMT_GameDefinitionsChanging(value);
					this.SendPropertyChanging();
					this._GMT_GameDefinitions = value;
					this.SendPropertyChanged("GMT_GameDefinitions");
					this.OnGMT_GameDefinitionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_MaxBet", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement GMT_MaxBet
		{
			get
			{
				return this._GMT_MaxBet;
			}
			set
			{
				if ((this._GMT_MaxBet != value))
				{
					this.OnGMT_MaxBetChanging(value);
					this.SendPropertyChanging();
					this._GMT_MaxBet = value;
					this.SendPropertyChanged("GMT_MaxBet");
					this.OnGMT_MaxBetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_IsOGS", DbType="Bit")]
		public System.Nullable<bool> GMT_IsOGS
		{
			get
			{
				return this._GMT_IsOGS;
			}
			set
			{
				if ((this._GMT_IsOGS != value))
				{
					this.OnGMT_IsOGSChanging(value);
					this.SendPropertyChanging();
					this._GMT_IsOGS = value;
					this.SendPropertyChanged("GMT_IsOGS");
					this.OnGMT_IsOGSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_PT_ID", DbType="TinyInt")]
		public System.Nullable<byte> GMT_PT_ID
		{
			get
			{
				return this._GMT_PT_ID;
			}
			set
			{
				if ((this._GMT_PT_ID != value))
				{
					this.OnGMT_PT_IDChanging(value);
					this.SendPropertyChanging();
					this._GMT_PT_ID = value;
					this.SendPropertyChanged("GMT_PT_ID");
					this.OnGMT_PT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT_IsNotSimplifiedIntegration", DbType="TinyInt")]
		public System.Nullable<byte> GMT_IsNotSimplifiedIntegration
		{
			get
			{
				return this._GMT_IsNotSimplifiedIntegration;
			}
			set
			{
				if ((this._GMT_IsNotSimplifiedIntegration != value))
				{
					this.OnGMT_IsNotSimplifiedIntegrationChanging(value);
					this.SendPropertyChanging();
					this._GMT_IsNotSimplifiedIntegration = value;
					this.SendPropertyChanged("GMT_IsNotSimplifiedIntegration");
					this.OnGMT_IsNotSimplifiedIntegrationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="MD.[_GameVendors]")]
	public partial class GameVendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GV_VendorID;
		
		private string _GV_VendorName;
		
		private byte _GV_IsActive;
		
		private System.Nullable<bool> _GV_IsActiveInDemo;
		
		private System.Nullable<bool> _GV_IsAnonymusSupported;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGV_VendorIDChanging(int value);
    partial void OnGV_VendorIDChanged();
    partial void OnGV_VendorNameChanging(string value);
    partial void OnGV_VendorNameChanged();
    partial void OnGV_IsActiveChanging(byte value);
    partial void OnGV_IsActiveChanged();
    partial void OnGV_IsActiveInDemoChanging(System.Nullable<bool> value);
    partial void OnGV_IsActiveInDemoChanged();
    partial void OnGV_IsAnonymusSupportedChanging(System.Nullable<bool> value);
    partial void OnGV_IsAnonymusSupportedChanged();
    #endregion
		
		public GameVendor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GV_VendorID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GV_VendorID
		{
			get
			{
				return this._GV_VendorID;
			}
			set
			{
				if ((this._GV_VendorID != value))
				{
					this.OnGV_VendorIDChanging(value);
					this.SendPropertyChanging();
					this._GV_VendorID = value;
					this.SendPropertyChanged("GV_VendorID");
					this.OnGV_VendorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GV_VendorName", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string GV_VendorName
		{
			get
			{
				return this._GV_VendorName;
			}
			set
			{
				if ((this._GV_VendorName != value))
				{
					this.OnGV_VendorNameChanging(value);
					this.SendPropertyChanging();
					this._GV_VendorName = value;
					this.SendPropertyChanged("GV_VendorName");
					this.OnGV_VendorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GV_IsActive", DbType="TinyInt NOT NULL")]
		public byte GV_IsActive
		{
			get
			{
				return this._GV_IsActive;
			}
			set
			{
				if ((this._GV_IsActive != value))
				{
					this.OnGV_IsActiveChanging(value);
					this.SendPropertyChanging();
					this._GV_IsActive = value;
					this.SendPropertyChanged("GV_IsActive");
					this.OnGV_IsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GV_IsActiveInDemo", DbType="Bit")]
		public System.Nullable<bool> GV_IsActiveInDemo
		{
			get
			{
				return this._GV_IsActiveInDemo;
			}
			set
			{
				if ((this._GV_IsActiveInDemo != value))
				{
					this.OnGV_IsActiveInDemoChanging(value);
					this.SendPropertyChanging();
					this._GV_IsActiveInDemo = value;
					this.SendPropertyChanged("GV_IsActiveInDemo");
					this.OnGV_IsActiveInDemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GV_IsAnonymusSupported", DbType="Bit")]
		public System.Nullable<bool> GV_IsAnonymusSupported
		{
			get
			{
				return this._GV_IsAnonymusSupported;
			}
			set
			{
				if ((this._GV_IsAnonymusSupported != value))
				{
					this.OnGV_IsAnonymusSupportedChanging(value);
					this.SendPropertyChanging();
					this._GV_IsAnonymusSupported = value;
					this.SendPropertyChanged("GV_IsAnonymusSupported");
					this.OnGV_IsAnonymusSupportedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="MD.[_GameGroups]")]
	public partial class GameGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GG_GroupID;
		
		private string _GG_GroupName;
		
		private byte _GG_IsActive;
		
		private float _GG_OMX_Weights;
		
		private float _GG_HND_Weights;
		
		private float _GG_Tour_Weights;
		
		private System.Nullable<short> _GG_GCT_ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGG_GroupIDChanging(int value);
    partial void OnGG_GroupIDChanged();
    partial void OnGG_GroupNameChanging(string value);
    partial void OnGG_GroupNameChanged();
    partial void OnGG_IsActiveChanging(byte value);
    partial void OnGG_IsActiveChanged();
    partial void OnGG_OMX_WeightsChanging(float value);
    partial void OnGG_OMX_WeightsChanged();
    partial void OnGG_HND_WeightsChanging(float value);
    partial void OnGG_HND_WeightsChanged();
    partial void OnGG_Tour_WeightsChanging(float value);
    partial void OnGG_Tour_WeightsChanged();
    partial void OnGG_GCT_IDChanging(System.Nullable<short> value);
    partial void OnGG_GCT_IDChanged();
    #endregion
		
		public GameGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GG_GroupID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GG_GroupID
		{
			get
			{
				return this._GG_GroupID;
			}
			set
			{
				if ((this._GG_GroupID != value))
				{
					this.OnGG_GroupIDChanging(value);
					this.SendPropertyChanging();
					this._GG_GroupID = value;
					this.SendPropertyChanged("GG_GroupID");
					this.OnGG_GroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GG_GroupName", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string GG_GroupName
		{
			get
			{
				return this._GG_GroupName;
			}
			set
			{
				if ((this._GG_GroupName != value))
				{
					this.OnGG_GroupNameChanging(value);
					this.SendPropertyChanging();
					this._GG_GroupName = value;
					this.SendPropertyChanged("GG_GroupName");
					this.OnGG_GroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GG_IsActive", DbType="TinyInt NOT NULL")]
		public byte GG_IsActive
		{
			get
			{
				return this._GG_IsActive;
			}
			set
			{
				if ((this._GG_IsActive != value))
				{
					this.OnGG_IsActiveChanging(value);
					this.SendPropertyChanging();
					this._GG_IsActive = value;
					this.SendPropertyChanged("GG_IsActive");
					this.OnGG_IsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GG_OMX_Weights", DbType="Real NOT NULL")]
		public float GG_OMX_Weights
		{
			get
			{
				return this._GG_OMX_Weights;
			}
			set
			{
				if ((this._GG_OMX_Weights != value))
				{
					this.OnGG_OMX_WeightsChanging(value);
					this.SendPropertyChanging();
					this._GG_OMX_Weights = value;
					this.SendPropertyChanged("GG_OMX_Weights");
					this.OnGG_OMX_WeightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GG_HND_Weights", DbType="Real NOT NULL")]
		public float GG_HND_Weights
		{
			get
			{
				return this._GG_HND_Weights;
			}
			set
			{
				if ((this._GG_HND_Weights != value))
				{
					this.OnGG_HND_WeightsChanging(value);
					this.SendPropertyChanging();
					this._GG_HND_Weights = value;
					this.SendPropertyChanged("GG_HND_Weights");
					this.OnGG_HND_WeightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GG_Tour_Weights", DbType="Real NOT NULL")]
		public float GG_Tour_Weights
		{
			get
			{
				return this._GG_Tour_Weights;
			}
			set
			{
				if ((this._GG_Tour_Weights != value))
				{
					this.OnGG_Tour_WeightsChanging(value);
					this.SendPropertyChanging();
					this._GG_Tour_Weights = value;
					this.SendPropertyChanged("GG_Tour_Weights");
					this.OnGG_Tour_WeightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GG_GCT_ID", DbType="SmallInt")]
		public System.Nullable<short> GG_GCT_ID
		{
			get
			{
				return this._GG_GCT_ID;
			}
			set
			{
				if ((this._GG_GCT_ID != value))
				{
					this.OnGG_GCT_IDChanging(value);
					this.SendPropertyChanging();
					this._GG_GCT_ID = value;
					this.SendPropertyChanged("GG_GCT_ID");
					this.OnGG_GCT_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="MD.[_RegulationTypes]")]
	public partial class RegulationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _RGLT_ID;
		
		private string _RGLT_Description;
		
		private byte _RGLT_IsActive;
		
		private System.Nullable<int> _RGLT_MaxLoginAttempts;
		
		private System.Nullable<int> _RGLT_ApprovedPeriodOfTime;
		
		private System.Xml.Linq.XElement _RGLT_RegistrationConfiguration;
		
		private System.Xml.Linq.XElement _RGLT_PokerRegulationLimits;
		
		private System.Xml.Linq.XElement _RGLT_GeoLocationConfiguration;
		
		private System.Xml.Linq.XElement _RGLT_AdditionalConfiguration;
		
		private bool _RGLT_IsPlayerIdentificationEncrypted;
		
		private byte _RGLT_HasAccountLimits;
		
		private short _RGLT_GMTOffset;
		
		private System.Xml.Linq.XElement _RGLT_TimeZoneConfiguration;
		
		private bool _RGLT_LimitsUseLocalTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRGLT_IDChanging(byte value);
    partial void OnRGLT_IDChanged();
    partial void OnRGLT_DescriptionChanging(string value);
    partial void OnRGLT_DescriptionChanged();
    partial void OnRGLT_IsActiveChanging(byte value);
    partial void OnRGLT_IsActiveChanged();
    partial void OnRGLT_MaxLoginAttemptsChanging(System.Nullable<int> value);
    partial void OnRGLT_MaxLoginAttemptsChanged();
    partial void OnRGLT_ApprovedPeriodOfTimeChanging(System.Nullable<int> value);
    partial void OnRGLT_ApprovedPeriodOfTimeChanged();
    partial void OnRGLT_RegistrationConfigurationChanging(System.Xml.Linq.XElement value);
    partial void OnRGLT_RegistrationConfigurationChanged();
    partial void OnRGLT_PokerRegulationLimitsChanging(System.Xml.Linq.XElement value);
    partial void OnRGLT_PokerRegulationLimitsChanged();
    partial void OnRGLT_GeoLocationConfigurationChanging(System.Xml.Linq.XElement value);
    partial void OnRGLT_GeoLocationConfigurationChanged();
    partial void OnRGLT_AdditionalConfigurationChanging(System.Xml.Linq.XElement value);
    partial void OnRGLT_AdditionalConfigurationChanged();
    partial void OnRGLT_IsPlayerIdentificationEncryptedChanging(bool value);
    partial void OnRGLT_IsPlayerIdentificationEncryptedChanged();
    partial void OnRGLT_HasAccountLimitsChanging(byte value);
    partial void OnRGLT_HasAccountLimitsChanged();
    partial void OnRGLT_GMTOffsetChanging(short value);
    partial void OnRGLT_GMTOffsetChanged();
    partial void OnRGLT_TimeZoneConfigurationChanging(System.Xml.Linq.XElement value);
    partial void OnRGLT_TimeZoneConfigurationChanged();
    partial void OnRGLT_LimitsUseLocalTimeChanging(bool value);
    partial void OnRGLT_LimitsUseLocalTimeChanged();
    #endregion
		
		public RegulationType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGLT_ID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte RGLT_ID
		{
			get
			{
				return this._RGLT_ID;
			}
			set
			{
				if ((this._RGLT_ID != value))
				{
					this.OnRGLT_IDChanging(value);
					this.SendPropertyChanging();
					this._RGLT_ID = value;
					this.SendPropertyChanged("RGLT_ID");
					this.OnRGLT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGLT_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RGLT_Description
		{
			get
			{
				return this._RGLT_Description;
			}
			set
			{
				if ((this._RGLT_Description != value))
				{
					this.OnRGLT_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._RGLT_Description = value;
					this.SendPropertyChanged("RGLT_Description");
					this.OnRGLT_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGLT_IsActive", DbType="TinyInt NOT NULL")]
		public byte RGLT_IsActive
		{
			get
			{
				return this._RGLT_IsActive;
			}
			set
			{
				if ((this._RGLT_IsActive != value))
				{
					this.OnRGLT_IsActiveChanging(value);
					this.SendPropertyChanging();
					this._RGLT_IsActive = value;
					this.SendPropertyChanged("RGLT_IsActive");
					this.OnRGLT_IsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGLT_MaxLoginAttempts", DbType="Int")]
		public System.Nullable<int> RGLT_MaxLoginAttempts
		{
			get
			{
				return this._RGLT_MaxLoginAttempts;
			}
			set
			{
				if ((this._RGLT_MaxLoginAttempts != value))
				{
					this.OnRGLT_MaxLoginAttemptsChanging(value);
					this.SendPropertyChanging();
					this._RGLT_MaxLoginAttempts = value;
					this.SendPropertyChanged("RGLT_MaxLoginAttempts");
					this.OnRGLT_MaxLoginAttemptsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGLT_ApprovedPeriodOfTime", DbType="Int")]
		public System.Nullable<int> RGLT_ApprovedPeriodOfTime
		{
			get
			{
				return this._RGLT_ApprovedPeriodOfTime;
			}
			set
			{
				if ((this._RGLT_ApprovedPeriodOfTime != value))
				{
					this.OnRGLT_ApprovedPeriodOfTimeChanging(value);
					this.SendPropertyChanging();
					this._RGLT_ApprovedPeriodOfTime = value;
					this.SendPropertyChanged("RGLT_ApprovedPeriodOfTime");
					this.OnRGLT_ApprovedPeriodOfTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGLT_RegistrationConfiguration", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement RGLT_RegistrationConfiguration
		{
			get
			{
				return this._RGLT_RegistrationConfiguration;
			}
			set
			{
				if ((this._RGLT_RegistrationConfiguration != value))
				{
					this.OnRGLT_RegistrationConfigurationChanging(value);
					this.SendPropertyChanging();
					this._RGLT_RegistrationConfiguration = value;
					this.SendPropertyChanged("RGLT_RegistrationConfiguration");
					this.OnRGLT_RegistrationConfigurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGLT_PokerRegulationLimits", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement RGLT_PokerRegulationLimits
		{
			get
			{
				return this._RGLT_PokerRegulationLimits;
			}
			set
			{
				if ((this._RGLT_PokerRegulationLimits != value))
				{
					this.OnRGLT_PokerRegulationLimitsChanging(value);
					this.SendPropertyChanging();
					this._RGLT_PokerRegulationLimits = value;
					this.SendPropertyChanged("RGLT_PokerRegulationLimits");
					this.OnRGLT_PokerRegulationLimitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGLT_GeoLocationConfiguration", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement RGLT_GeoLocationConfiguration
		{
			get
			{
				return this._RGLT_GeoLocationConfiguration;
			}
			set
			{
				if ((this._RGLT_GeoLocationConfiguration != value))
				{
					this.OnRGLT_GeoLocationConfigurationChanging(value);
					this.SendPropertyChanging();
					this._RGLT_GeoLocationConfiguration = value;
					this.SendPropertyChanged("RGLT_GeoLocationConfiguration");
					this.OnRGLT_GeoLocationConfigurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGLT_AdditionalConfiguration", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement RGLT_AdditionalConfiguration
		{
			get
			{
				return this._RGLT_AdditionalConfiguration;
			}
			set
			{
				if ((this._RGLT_AdditionalConfiguration != value))
				{
					this.OnRGLT_AdditionalConfigurationChanging(value);
					this.SendPropertyChanging();
					this._RGLT_AdditionalConfiguration = value;
					this.SendPropertyChanged("RGLT_AdditionalConfiguration");
					this.OnRGLT_AdditionalConfigurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGLT_IsPlayerIdentificationEncrypted", DbType="Bit NOT NULL")]
		public bool RGLT_IsPlayerIdentificationEncrypted
		{
			get
			{
				return this._RGLT_IsPlayerIdentificationEncrypted;
			}
			set
			{
				if ((this._RGLT_IsPlayerIdentificationEncrypted != value))
				{
					this.OnRGLT_IsPlayerIdentificationEncryptedChanging(value);
					this.SendPropertyChanging();
					this._RGLT_IsPlayerIdentificationEncrypted = value;
					this.SendPropertyChanged("RGLT_IsPlayerIdentificationEncrypted");
					this.OnRGLT_IsPlayerIdentificationEncryptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGLT_HasAccountLimits", DbType="TinyInt NOT NULL")]
		public byte RGLT_HasAccountLimits
		{
			get
			{
				return this._RGLT_HasAccountLimits;
			}
			set
			{
				if ((this._RGLT_HasAccountLimits != value))
				{
					this.OnRGLT_HasAccountLimitsChanging(value);
					this.SendPropertyChanging();
					this._RGLT_HasAccountLimits = value;
					this.SendPropertyChanged("RGLT_HasAccountLimits");
					this.OnRGLT_HasAccountLimitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGLT_GMTOffset", DbType="SmallInt NOT NULL")]
		public short RGLT_GMTOffset
		{
			get
			{
				return this._RGLT_GMTOffset;
			}
			set
			{
				if ((this._RGLT_GMTOffset != value))
				{
					this.OnRGLT_GMTOffsetChanging(value);
					this.SendPropertyChanging();
					this._RGLT_GMTOffset = value;
					this.SendPropertyChanged("RGLT_GMTOffset");
					this.OnRGLT_GMTOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGLT_TimeZoneConfiguration", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement RGLT_TimeZoneConfiguration
		{
			get
			{
				return this._RGLT_TimeZoneConfiguration;
			}
			set
			{
				if ((this._RGLT_TimeZoneConfiguration != value))
				{
					this.OnRGLT_TimeZoneConfigurationChanging(value);
					this.SendPropertyChanging();
					this._RGLT_TimeZoneConfiguration = value;
					this.SendPropertyChanged("RGLT_TimeZoneConfiguration");
					this.OnRGLT_TimeZoneConfigurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGLT_LimitsUseLocalTime", DbType="Bit NOT NULL")]
		public bool RGLT_LimitsUseLocalTime
		{
			get
			{
				return this._RGLT_LimitsUseLocalTime;
			}
			set
			{
				if ((this._RGLT_LimitsUseLocalTime != value))
				{
					this.OnRGLT_LimitsUseLocalTimeChanging(value);
					this.SendPropertyChanging();
					this._RGLT_LimitsUseLocalTime = value;
					this.SendPropertyChanged("RGLT_LimitsUseLocalTime");
					this.OnRGLT_LimitsUseLocalTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
