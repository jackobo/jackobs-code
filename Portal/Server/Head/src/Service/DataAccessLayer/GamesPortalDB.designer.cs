#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GamesPortal.Service.DataAccessLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GamesPortalDEV")]
	public partial class GamesPortalDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGameType(GameType instance);
    partial void UpdateGameType(GameType instance);
    partial void DeleteGameType(GameType instance);
    partial void InsertClientTypeToRegulationMapping(ClientTypeToRegulationMapping instance);
    partial void UpdateClientTypeToRegulationMapping(ClientTypeToRegulationMapping instance);
    partial void DeleteClientTypeToRegulationMapping(ClientTypeToRegulationMapping instance);
    partial void InsertUpgradeScript(UpgradeScript instance);
    partial void UpdateUpgradeScript(UpgradeScript instance);
    partial void DeleteUpgradeScript(UpgradeScript instance);
    partial void InsertGameVersion_Property(GameVersion_Property instance);
    partial void UpdateGameVersion_Property(GameVersion_Property instance);
    partial void DeleteGameVersion_Property(GameVersion_Property instance);
    partial void InsertGameVersion_Property_History(GameVersion_Property_History instance);
    partial void UpdateGameVersion_Property_History(GameVersion_Property_History instance);
    partial void DeleteGameVersion_Property_History(GameVersion_Property_History instance);
    partial void InsertRegulationType(RegulationType instance);
    partial void UpdateRegulationType(RegulationType instance);
    partial void DeleteRegulationType(RegulationType instance);
    partial void InsertGameVersion(GameVersion instance);
    partial void UpdateGameVersion(GameVersion instance);
    partial void DeleteGameVersion(GameVersion instance);
    partial void InsertGameVersion_Language_ToArtifactorySyncQueue(GameVersion_Language_ToArtifactorySyncQueue instance);
    partial void UpdateGameVersion_Language_ToArtifactorySyncQueue(GameVersion_Language_ToArtifactorySyncQueue instance);
    partial void DeleteGameVersion_Language_ToArtifactorySyncQueue(GameVersion_Language_ToArtifactorySyncQueue instance);
    partial void InsertRegulationType_MandatoryLanguage(RegulationType_MandatoryLanguage instance);
    partial void UpdateRegulationType_MandatoryLanguage(RegulationType_MandatoryLanguage instance);
    partial void DeleteRegulationType_MandatoryLanguage(RegulationType_MandatoryLanguage instance);
    partial void InsertGameVersion_Language(GameVersion_Language instance);
    partial void UpdateGameVersion_Language(GameVersion_Language instance);
    partial void DeleteGameVersion_Language(GameVersion_Language instance);
    partial void InsertGame(Game instance);
    partial void UpdateGame(Game instance);
    partial void DeleteGame(Game instance);
    partial void InsertGameVersion_Regulation(GameVersion_Regulation instance);
    partial void UpdateGameVersion_Regulation(GameVersion_Regulation instance);
    partial void DeleteGameVersion_Regulation(GameVersion_Regulation instance);
    #endregion
		
		public GamesPortalDataContext() : 
				base(global::GamesPortal.Service.Properties.Settings.Default.GamesPortalDEVConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GamesPortalDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GamesPortalDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GamesPortalDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GamesPortalDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<GameType> GameTypes
		{
			get
			{
				return this.GetTable<GameType>();
			}
		}
		
		public System.Data.Linq.Table<ClientTypeToRegulationMapping> ClientTypeToRegulationMappings
		{
			get
			{
				return this.GetTable<ClientTypeToRegulationMapping>();
			}
		}
		
		public System.Data.Linq.Table<UpgradeScript> UpgradeScripts
		{
			get
			{
				return this.GetTable<UpgradeScript>();
			}
		}
		
		public System.Data.Linq.Table<GameVersion_Property> GameVersion_Properties
		{
			get
			{
				return this.GetTable<GameVersion_Property>();
			}
		}
		
		public System.Data.Linq.Table<GameVersion_Property_History> GameVersion_Property_Histories
		{
			get
			{
				return this.GetTable<GameVersion_Property_History>();
			}
		}
		
		public System.Data.Linq.Table<RegulationType> RegulationTypes
		{
			get
			{
				return this.GetTable<RegulationType>();
			}
		}
		
		public System.Data.Linq.Table<RegulationsName> RegulationsNames
		{
			get
			{
				return this.GetTable<RegulationsName>();
			}
		}
		
		public System.Data.Linq.Table<GameVersion> GameVersions
		{
			get
			{
				return this.GetTable<GameVersion>();
			}
		}
		
		public System.Data.Linq.Table<GameVersion_Language_ToArtifactorySyncQueue> GameVersion_Language_ToArtifactorySyncQueues
		{
			get
			{
				return this.GetTable<GameVersion_Language_ToArtifactorySyncQueue>();
			}
		}
		
		public System.Data.Linq.Table<NeverApprovedGame> NeverApprovedGames
		{
			get
			{
				return this.GetTable<NeverApprovedGame>();
			}
		}
		
		public System.Data.Linq.Table<LatestVersionForEachGameAndRegulation> LatestVersionForEachGameAndRegulations
		{
			get
			{
				return this.GetTable<LatestVersionForEachGameAndRegulation>();
			}
		}
		
		public System.Data.Linq.Table<RegulationType_MandatoryLanguage> RegulationType_MandatoryLanguages
		{
			get
			{
				return this.GetTable<RegulationType_MandatoryLanguage>();
			}
		}
		
		public System.Data.Linq.Table<GameVersion_Language> GameVersion_Languages
		{
			get
			{
				return this.GetTable<GameVersion_Language>();
			}
		}
		
		public System.Data.Linq.Table<GameVersion_LanguageQAApprovalInfo> GameVersion_LanguageQAApprovalInfos
		{
			get
			{
				return this.GetTable<GameVersion_LanguageQAApprovalInfo>();
			}
		}
		
		public System.Data.Linq.Table<Game> Games
		{
			get
			{
				return this.GetTable<Game>();
			}
		}
		
		public System.Data.Linq.Table<GameVersion_Regulation> GameVersion_Regulations
		{
			get
			{
				return this.GetTable<GameVersion_Regulation>();
			}
		}
		
		public System.Data.Linq.Table<LatestApprovedGameVersionForEachRegulation> LatestApprovedGameVersionForEachRegulations
		{
			get
			{
				return this.GetTable<LatestApprovedGameVersionForEachRegulation>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.NormalizeApprovalStatusForAllLanguagesWithTheSameHash")]
		public int NormalizeApprovalStatusForAllLanguagesWithTheSameHash()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GameType")]
	public partial class GameType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Row_ID;
		
		private int _GameType_ID;
		
		private System.Guid _Game_ID;
		
		private string _Name;
		
		private System.Nullable<int> _Operator_ID;
		
		private EntityRef<Game> _Game;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRow_IDChanging(System.Guid value);
    partial void OnRow_IDChanged();
    partial void OnGameType_IDChanging(int value);
    partial void OnGameType_IDChanged();
    partial void OnGame_IDChanging(System.Guid value);
    partial void OnGame_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOperator_IDChanging(System.Nullable<int> value);
    partial void OnOperator_IDChanged();
    #endregion
		
		public GameType()
		{
			this._Game = default(EntityRef<Game>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Row_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Row_ID
		{
			get
			{
				return this._Row_ID;
			}
			set
			{
				if ((this._Row_ID != value))
				{
					this.OnRow_IDChanging(value);
					this.SendPropertyChanging();
					this._Row_ID = value;
					this.SendPropertyChanged("Row_ID");
					this.OnRow_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameType_ID", DbType="Int NOT NULL")]
		public int GameType_ID
		{
			get
			{
				return this._GameType_ID;
			}
			set
			{
				if ((this._GameType_ID != value))
				{
					this.OnGameType_IDChanging(value);
					this.SendPropertyChanging();
					this._GameType_ID = value;
					this.SendPropertyChanged("GameType_ID");
					this.OnGameType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Game_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Game_ID
		{
			get
			{
				return this._Game_ID;
			}
			set
			{
				if ((this._Game_ID != value))
				{
					if (this._Game.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGame_IDChanging(value);
					this.SendPropertyChanging();
					this._Game_ID = value;
					this.SendPropertyChanged("Game_ID");
					this.OnGame_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operator_ID", DbType="Int")]
		public System.Nullable<int> Operator_ID
		{
			get
			{
				return this._Operator_ID;
			}
			set
			{
				if ((this._Operator_ID != value))
				{
					this.OnOperator_IDChanging(value);
					this.SendPropertyChanging();
					this._Operator_ID = value;
					this.SendPropertyChanged("Operator_ID");
					this.OnOperator_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Game_GameType", Storage="_Game", ThisKey="Game_ID", OtherKey="Game_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Game Game
		{
			get
			{
				return this._Game.Entity;
			}
			set
			{
				Game previousValue = this._Game.Entity;
				if (((previousValue != value) 
							|| (this._Game.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Game.Entity = null;
						previousValue.GameTypes.Remove(this);
					}
					this._Game.Entity = value;
					if ((value != null))
					{
						value.GameTypes.Add(this);
						this._Game_ID = value.Game_ID;
					}
					else
					{
						this._Game_ID = default(System.Guid);
					}
					this.SendPropertyChanged("Game");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientTypeToRegulationMapping")]
	public partial class ClientTypeToRegulationMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Row_ID;
		
		private string _ClientType;
		
		private string _Regulation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRow_IDChanging(System.Guid value);
    partial void OnRow_IDChanged();
    partial void OnClientTypeChanging(string value);
    partial void OnClientTypeChanged();
    partial void OnRegulationChanging(string value);
    partial void OnRegulationChanged();
    #endregion
		
		public ClientTypeToRegulationMapping()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Row_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Row_ID
		{
			get
			{
				return this._Row_ID;
			}
			set
			{
				if ((this._Row_ID != value))
				{
					this.OnRow_IDChanging(value);
					this.SendPropertyChanging();
					this._Row_ID = value;
					this.SendPropertyChanged("Row_ID");
					this.OnRow_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientType
		{
			get
			{
				return this._ClientType;
			}
			set
			{
				if ((this._ClientType != value))
				{
					this.OnClientTypeChanging(value);
					this.SendPropertyChanging();
					this._ClientType = value;
					this.SendPropertyChanged("ClientType");
					this.OnClientTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regulation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Regulation
		{
			get
			{
				return this._Regulation;
			}
			set
			{
				if ((this._Regulation != value))
				{
					this.OnRegulationChanging(value);
					this.SendPropertyChanging();
					this._Regulation = value;
					this.SendPropertyChanged("Regulation");
					this.OnRegulationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UpgradeScripts")]
	public partial class UpgradeScript : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Script_ID;
		
		private string _ScriptName;
		
		private System.DateTime _RunDateTime;
		
		private string _ScriptContent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScript_IDChanging(int value);
    partial void OnScript_IDChanged();
    partial void OnScriptNameChanging(string value);
    partial void OnScriptNameChanged();
    partial void OnRunDateTimeChanging(System.DateTime value);
    partial void OnRunDateTimeChanged();
    partial void OnScriptContentChanging(string value);
    partial void OnScriptContentChanged();
    #endregion
		
		public UpgradeScript()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Script_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Script_ID
		{
			get
			{
				return this._Script_ID;
			}
			set
			{
				if ((this._Script_ID != value))
				{
					this.OnScript_IDChanging(value);
					this.SendPropertyChanging();
					this._Script_ID = value;
					this.SendPropertyChanged("Script_ID");
					this.OnScript_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScriptName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ScriptName
		{
			get
			{
				return this._ScriptName;
			}
			set
			{
				if ((this._ScriptName != value))
				{
					this.OnScriptNameChanging(value);
					this.SendPropertyChanging();
					this._ScriptName = value;
					this.SendPropertyChanged("ScriptName");
					this.OnScriptNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime RunDateTime
		{
			get
			{
				return this._RunDateTime;
			}
			set
			{
				if ((this._RunDateTime != value))
				{
					this.OnRunDateTimeChanging(value);
					this.SendPropertyChanging();
					this._RunDateTime = value;
					this.SendPropertyChanged("RunDateTime");
					this.OnRunDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScriptContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ScriptContent
		{
			get
			{
				return this._ScriptContent;
			}
			set
			{
				if ((this._ScriptContent != value))
				{
					this.OnScriptContentChanging(value);
					this.SendPropertyChanging();
					this._ScriptContent = value;
					this.SendPropertyChanged("ScriptContent");
					this.OnScriptContentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GameVersion_Property")]
	public partial class GameVersion_Property : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Row_ID;
		
		private string _PropertyKey;
		
		private string _PropertyValue;
		
		private System.Guid _GameVersion_ID;
		
		private string _Regulation;
		
		private System.Nullable<System.DateTime> _LastChange;
		
		private string _ChangedBy;
		
		private bool _IsUserAdded;
		
		private string _PropertyName;
		
		private string _PropertySet;
		
		private EntityRef<GameVersion> _GameVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRow_IDChanging(System.Guid value);
    partial void OnRow_IDChanged();
    partial void OnPropertyKeyChanging(string value);
    partial void OnPropertyKeyChanged();
    partial void OnPropertyValueChanging(string value);
    partial void OnPropertyValueChanged();
    partial void OnGameVersion_IDChanging(System.Guid value);
    partial void OnGameVersion_IDChanged();
    partial void OnRegulationChanging(string value);
    partial void OnRegulationChanged();
    partial void OnLastChangeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastChangeChanged();
    partial void OnChangedByChanging(string value);
    partial void OnChangedByChanged();
    partial void OnIsUserAddedChanging(bool value);
    partial void OnIsUserAddedChanged();
    partial void OnPropertyNameChanging(string value);
    partial void OnPropertyNameChanged();
    partial void OnPropertySetChanging(string value);
    partial void OnPropertySetChanged();
    #endregion
		
		public GameVersion_Property()
		{
			this._GameVersion = default(EntityRef<GameVersion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Row_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Row_ID
		{
			get
			{
				return this._Row_ID;
			}
			set
			{
				if ((this._Row_ID != value))
				{
					this.OnRow_IDChanging(value);
					this.SendPropertyChanging();
					this._Row_ID = value;
					this.SendPropertyChanged("Row_ID");
					this.OnRow_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PropertyKey
		{
			get
			{
				return this._PropertyKey;
			}
			set
			{
				if ((this._PropertyKey != value))
				{
					this.OnPropertyKeyChanging(value);
					this.SendPropertyChanging();
					this._PropertyKey = value;
					this.SendPropertyChanged("PropertyKey");
					this.OnPropertyKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PropertyValue
		{
			get
			{
				return this._PropertyValue;
			}
			set
			{
				if ((this._PropertyValue != value))
				{
					this.OnPropertyValueChanging(value);
					this.SendPropertyChanging();
					this._PropertyValue = value;
					this.SendPropertyChanged("PropertyValue");
					this.OnPropertyValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameVersion_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GameVersion_ID
		{
			get
			{
				return this._GameVersion_ID;
			}
			set
			{
				if ((this._GameVersion_ID != value))
				{
					if (this._GameVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGameVersion_IDChanging(value);
					this.SendPropertyChanging();
					this._GameVersion_ID = value;
					this.SendPropertyChanged("GameVersion_ID");
					this.OnGameVersion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regulation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Regulation
		{
			get
			{
				return this._Regulation;
			}
			set
			{
				if ((this._Regulation != value))
				{
					this.OnRegulationChanging(value);
					this.SendPropertyChanging();
					this._Regulation = value;
					this.SendPropertyChanged("Regulation");
					this.OnRegulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChange", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastChange
		{
			get
			{
				return this._LastChange;
			}
			set
			{
				if ((this._LastChange != value))
				{
					this.OnLastChangeChanging(value);
					this.SendPropertyChanging();
					this._LastChange = value;
					this.SendPropertyChanged("LastChange");
					this.OnLastChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="NVarChar(50)")]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this.OnChangedByChanging(value);
					this.SendPropertyChanging();
					this._ChangedBy = value;
					this.SendPropertyChanged("ChangedBy");
					this.OnChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUserAdded", DbType="Bit NOT NULL")]
		public bool IsUserAdded
		{
			get
			{
				return this._IsUserAdded;
			}
			set
			{
				if ((this._IsUserAdded != value))
				{
					this.OnIsUserAddedChanging(value);
					this.SendPropertyChanging();
					this._IsUserAdded = value;
					this.SendPropertyChanged("IsUserAdded");
					this.OnIsUserAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyName", DbType="NVarChar(50)")]
		public string PropertyName
		{
			get
			{
				return this._PropertyName;
			}
			set
			{
				if ((this._PropertyName != value))
				{
					this.OnPropertyNameChanging(value);
					this.SendPropertyChanging();
					this._PropertyName = value;
					this.SendPropertyChanged("PropertyName");
					this.OnPropertyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertySet", DbType="NVarChar(50)")]
		public string PropertySet
		{
			get
			{
				return this._PropertySet;
			}
			set
			{
				if ((this._PropertySet != value))
				{
					this.OnPropertySetChanging(value);
					this.SendPropertyChanging();
					this._PropertySet = value;
					this.SendPropertyChanged("PropertySet");
					this.OnPropertySetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameVersion_GameVersion_Property", Storage="_GameVersion", ThisKey="GameVersion_ID", OtherKey="GameVersion_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GameVersion GameVersion
		{
			get
			{
				return this._GameVersion.Entity;
			}
			set
			{
				GameVersion previousValue = this._GameVersion.Entity;
				if (((previousValue != value) 
							|| (this._GameVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GameVersion.Entity = null;
						previousValue.GameVersion_Properties.Remove(this);
					}
					this._GameVersion.Entity = value;
					if ((value != null))
					{
						value.GameVersion_Properties.Add(this);
						this._GameVersion_ID = value.GameVersion_ID;
					}
					else
					{
						this._GameVersion_ID = default(System.Guid);
					}
					this.SendPropertyChanged("GameVersion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GameVersion_Property_History")]
	public partial class GameVersion_Property_History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Row_ID;
		
		private System.Guid _GameVersion_ID;
		
		private string _Regulation;
		
		private string _PropertyKey;
		
		private string _OldValue;
		
		private string _NewValue;
		
		private System.DateTime _ChangeDate;
		
		private string _ChangedBy;
		
		private int _ChangeType;
		
		private EntityRef<GameVersion> _GameVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRow_IDChanging(int value);
    partial void OnRow_IDChanged();
    partial void OnGameVersion_IDChanging(System.Guid value);
    partial void OnGameVersion_IDChanged();
    partial void OnRegulationChanging(string value);
    partial void OnRegulationChanged();
    partial void OnPropertyKeyChanging(string value);
    partial void OnPropertyKeyChanged();
    partial void OnOldValueChanging(string value);
    partial void OnOldValueChanged();
    partial void OnNewValueChanging(string value);
    partial void OnNewValueChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnChangedByChanging(string value);
    partial void OnChangedByChanged();
    partial void OnChangeTypeChanging(int value);
    partial void OnChangeTypeChanged();
    #endregion
		
		public GameVersion_Property_History()
		{
			this._GameVersion = default(EntityRef<GameVersion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Row_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Row_ID
		{
			get
			{
				return this._Row_ID;
			}
			set
			{
				if ((this._Row_ID != value))
				{
					this.OnRow_IDChanging(value);
					this.SendPropertyChanging();
					this._Row_ID = value;
					this.SendPropertyChanged("Row_ID");
					this.OnRow_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameVersion_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GameVersion_ID
		{
			get
			{
				return this._GameVersion_ID;
			}
			set
			{
				if ((this._GameVersion_ID != value))
				{
					if (this._GameVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGameVersion_IDChanging(value);
					this.SendPropertyChanging();
					this._GameVersion_ID = value;
					this.SendPropertyChanged("GameVersion_ID");
					this.OnGameVersion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regulation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Regulation
		{
			get
			{
				return this._Regulation;
			}
			set
			{
				if ((this._Regulation != value))
				{
					this.OnRegulationChanging(value);
					this.SendPropertyChanging();
					this._Regulation = value;
					this.SendPropertyChanged("Regulation");
					this.OnRegulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PropertyKey
		{
			get
			{
				return this._PropertyKey;
			}
			set
			{
				if ((this._PropertyKey != value))
				{
					this.OnPropertyKeyChanging(value);
					this.SendPropertyChanging();
					this._PropertyKey = value;
					this.SendPropertyChanged("PropertyKey");
					this.OnPropertyKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldValue", DbType="NVarChar(MAX)")]
		public string OldValue
		{
			get
			{
				return this._OldValue;
			}
			set
			{
				if ((this._OldValue != value))
				{
					this.OnOldValueChanging(value);
					this.SendPropertyChanging();
					this._OldValue = value;
					this.SendPropertyChanged("OldValue");
					this.OnOldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="NVarChar(MAX)")]
		public string NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this.OnNewValueChanging(value);
					this.SendPropertyChanging();
					this._NewValue = value;
					this.SendPropertyChanged("NewValue");
					this.OnNewValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this.OnChangedByChanging(value);
					this.SendPropertyChanging();
					this._ChangedBy = value;
					this.SendPropertyChanged("ChangedBy");
					this.OnChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeType", DbType="Int NOT NULL")]
		public int ChangeType
		{
			get
			{
				return this._ChangeType;
			}
			set
			{
				if ((this._ChangeType != value))
				{
					this.OnChangeTypeChanging(value);
					this.SendPropertyChanging();
					this._ChangeType = value;
					this.SendPropertyChanged("ChangeType");
					this.OnChangeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameVersion_GameVersion_Property_History", Storage="_GameVersion", ThisKey="GameVersion_ID", OtherKey="GameVersion_ID", IsForeignKey=true)]
		public GameVersion GameVersion
		{
			get
			{
				return this._GameVersion.Entity;
			}
			set
			{
				GameVersion previousValue = this._GameVersion.Entity;
				if (((previousValue != value) 
							|| (this._GameVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GameVersion.Entity = null;
						previousValue.GameVersion_Property_Histories.Remove(this);
					}
					this._GameVersion.Entity = value;
					if ((value != null))
					{
						value.GameVersion_Property_Histories.Add(this);
						this._GameVersion_ID = value.GameVersion_ID;
					}
					else
					{
						this._GameVersion_ID = default(System.Guid);
					}
					this.SendPropertyChanged("GameVersion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegulationType")]
	public partial class RegulationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RegulationType_ID;
		
		private string _RegulationName;
		
		private EntitySet<RegulationType_MandatoryLanguage> _RegulationType_MandatoryLanguages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegulationType_IDChanging(int value);
    partial void OnRegulationType_IDChanged();
    partial void OnRegulationNameChanging(string value);
    partial void OnRegulationNameChanged();
    #endregion
		
		public RegulationType()
		{
			this._RegulationType_MandatoryLanguages = new EntitySet<RegulationType_MandatoryLanguage>(new Action<RegulationType_MandatoryLanguage>(this.attach_RegulationType_MandatoryLanguages), new Action<RegulationType_MandatoryLanguage>(this.detach_RegulationType_MandatoryLanguages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegulationType_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RegulationType_ID
		{
			get
			{
				return this._RegulationType_ID;
			}
			set
			{
				if ((this._RegulationType_ID != value))
				{
					this.OnRegulationType_IDChanging(value);
					this.SendPropertyChanging();
					this._RegulationType_ID = value;
					this.SendPropertyChanged("RegulationType_ID");
					this.OnRegulationType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegulationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RegulationName
		{
			get
			{
				return this._RegulationName;
			}
			set
			{
				if ((this._RegulationName != value))
				{
					this.OnRegulationNameChanging(value);
					this.SendPropertyChanging();
					this._RegulationName = value;
					this.SendPropertyChanged("RegulationName");
					this.OnRegulationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegulationType_RegulationType_MandatoryLanguage", Storage="_RegulationType_MandatoryLanguages", ThisKey="RegulationType_ID", OtherKey="RegulationType_ID")]
		public EntitySet<RegulationType_MandatoryLanguage> RegulationType_MandatoryLanguages
		{
			get
			{
				return this._RegulationType_MandatoryLanguages;
			}
			set
			{
				this._RegulationType_MandatoryLanguages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RegulationType_MandatoryLanguages(RegulationType_MandatoryLanguage entity)
		{
			this.SendPropertyChanging();
			entity.RegulationType = this;
		}
		
		private void detach_RegulationType_MandatoryLanguages(RegulationType_MandatoryLanguage entity)
		{
			this.SendPropertyChanging();
			entity.RegulationType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegulationsNames")]
	public partial class RegulationsName
	{
		
		private string _Name;
		
		public RegulationsName()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GameVersion")]
	public partial class GameVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GameVersion_ID;
		
		private string _VersionFolder;
		
		private long _VersionAsLong;
		
		private int _Technology;
		
		private System.Guid _Game_ID;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedBy;
		
		private string _TriggeredBy;
		
		private int _PlatformType;
		
		private EntitySet<GameVersion_Property> _GameVersion_Properties;
		
		private EntitySet<GameVersion_Property_History> _GameVersion_Property_Histories;
		
		private EntitySet<GameVersion_Language> _GameVersion_Languages;
		
		private EntitySet<GameVersion_Regulation> _GameVersion_Regulations;
		
		private EntityRef<Game> _Game;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGameVersion_IDChanging(System.Guid value);
    partial void OnGameVersion_IDChanged();
    partial void OnVersionFolderChanging(string value);
    partial void OnVersionFolderChanged();
    partial void OnVersionAsLongChanging(long value);
    partial void OnVersionAsLongChanged();
    partial void OnTechnologyChanging(int value);
    partial void OnTechnologyChanged();
    partial void OnGame_IDChanging(System.Guid value);
    partial void OnGame_IDChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnTriggeredByChanging(string value);
    partial void OnTriggeredByChanged();
    partial void OnPlatformTypeChanging(int value);
    partial void OnPlatformTypeChanged();
    #endregion
		
		public GameVersion()
		{
			this._GameVersion_Properties = new EntitySet<GameVersion_Property>(new Action<GameVersion_Property>(this.attach_GameVersion_Properties), new Action<GameVersion_Property>(this.detach_GameVersion_Properties));
			this._GameVersion_Property_Histories = new EntitySet<GameVersion_Property_History>(new Action<GameVersion_Property_History>(this.attach_GameVersion_Property_Histories), new Action<GameVersion_Property_History>(this.detach_GameVersion_Property_Histories));
			this._GameVersion_Languages = new EntitySet<GameVersion_Language>(new Action<GameVersion_Language>(this.attach_GameVersion_Languages), new Action<GameVersion_Language>(this.detach_GameVersion_Languages));
			this._GameVersion_Regulations = new EntitySet<GameVersion_Regulation>(new Action<GameVersion_Regulation>(this.attach_GameVersion_Regulations), new Action<GameVersion_Regulation>(this.detach_GameVersion_Regulations));
			this._Game = default(EntityRef<Game>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameVersion_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GameVersion_ID
		{
			get
			{
				return this._GameVersion_ID;
			}
			set
			{
				if ((this._GameVersion_ID != value))
				{
					this.OnGameVersion_IDChanging(value);
					this.SendPropertyChanging();
					this._GameVersion_ID = value;
					this.SendPropertyChanged("GameVersion_ID");
					this.OnGameVersion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionFolder", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string VersionFolder
		{
			get
			{
				return this._VersionFolder;
			}
			set
			{
				if ((this._VersionFolder != value))
				{
					this.OnVersionFolderChanging(value);
					this.SendPropertyChanging();
					this._VersionFolder = value;
					this.SendPropertyChanged("VersionFolder");
					this.OnVersionFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionAsLong", DbType="BigInt NOT NULL")]
		public long VersionAsLong
		{
			get
			{
				return this._VersionAsLong;
			}
			set
			{
				if ((this._VersionAsLong != value))
				{
					this.OnVersionAsLongChanging(value);
					this.SendPropertyChanging();
					this._VersionAsLong = value;
					this.SendPropertyChanged("VersionAsLong");
					this.OnVersionAsLongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Technology", DbType="Int NOT NULL")]
		public int Technology
		{
			get
			{
				return this._Technology;
			}
			set
			{
				if ((this._Technology != value))
				{
					this.OnTechnologyChanging(value);
					this.SendPropertyChanging();
					this._Technology = value;
					this.SendPropertyChanged("Technology");
					this.OnTechnologyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Game_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Game_ID
		{
			get
			{
				return this._Game_ID;
			}
			set
			{
				if ((this._Game_ID != value))
				{
					if (this._Game.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGame_IDChanging(value);
					this.SendPropertyChanging();
					this._Game_ID = value;
					this.SendPropertyChanged("Game_ID");
					this.OnGame_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggeredBy", DbType="NVarChar(50)")]
		public string TriggeredBy
		{
			get
			{
				return this._TriggeredBy;
			}
			set
			{
				if ((this._TriggeredBy != value))
				{
					this.OnTriggeredByChanging(value);
					this.SendPropertyChanging();
					this._TriggeredBy = value;
					this.SendPropertyChanged("TriggeredBy");
					this.OnTriggeredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatformType", DbType="Int NOT NULL")]
		public int PlatformType
		{
			get
			{
				return this._PlatformType;
			}
			set
			{
				if ((this._PlatformType != value))
				{
					this.OnPlatformTypeChanging(value);
					this.SendPropertyChanging();
					this._PlatformType = value;
					this.SendPropertyChanged("PlatformType");
					this.OnPlatformTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameVersion_GameVersion_Property", Storage="_GameVersion_Properties", ThisKey="GameVersion_ID", OtherKey="GameVersion_ID")]
		public EntitySet<GameVersion_Property> GameVersion_Properties
		{
			get
			{
				return this._GameVersion_Properties;
			}
			set
			{
				this._GameVersion_Properties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameVersion_GameVersion_Property_History", Storage="_GameVersion_Property_Histories", ThisKey="GameVersion_ID", OtherKey="GameVersion_ID")]
		public EntitySet<GameVersion_Property_History> GameVersion_Property_Histories
		{
			get
			{
				return this._GameVersion_Property_Histories;
			}
			set
			{
				this._GameVersion_Property_Histories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameVersion_GameVersion_Language", Storage="_GameVersion_Languages", ThisKey="GameVersion_ID", OtherKey="GameVersion_ID")]
		public EntitySet<GameVersion_Language> GameVersion_Languages
		{
			get
			{
				return this._GameVersion_Languages;
			}
			set
			{
				this._GameVersion_Languages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameVersion_GameVersion_Regulation", Storage="_GameVersion_Regulations", ThisKey="GameVersion_ID", OtherKey="GameVersion_ID")]
		public EntitySet<GameVersion_Regulation> GameVersion_Regulations
		{
			get
			{
				return this._GameVersion_Regulations;
			}
			set
			{
				this._GameVersion_Regulations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Game_GameVersion", Storage="_Game", ThisKey="Game_ID", OtherKey="Game_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Game Game
		{
			get
			{
				return this._Game.Entity;
			}
			set
			{
				Game previousValue = this._Game.Entity;
				if (((previousValue != value) 
							|| (this._Game.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Game.Entity = null;
						previousValue.GameVersions.Remove(this);
					}
					this._Game.Entity = value;
					if ((value != null))
					{
						value.GameVersions.Add(this);
						this._Game_ID = value.Game_ID;
					}
					else
					{
						this._Game_ID = default(System.Guid);
					}
					this.SendPropertyChanged("Game");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GameVersion_Properties(GameVersion_Property entity)
		{
			this.SendPropertyChanging();
			entity.GameVersion = this;
		}
		
		private void detach_GameVersion_Properties(GameVersion_Property entity)
		{
			this.SendPropertyChanging();
			entity.GameVersion = null;
		}
		
		private void attach_GameVersion_Property_Histories(GameVersion_Property_History entity)
		{
			this.SendPropertyChanging();
			entity.GameVersion = this;
		}
		
		private void detach_GameVersion_Property_Histories(GameVersion_Property_History entity)
		{
			this.SendPropertyChanging();
			entity.GameVersion = null;
		}
		
		private void attach_GameVersion_Languages(GameVersion_Language entity)
		{
			this.SendPropertyChanging();
			entity.GameVersion = this;
		}
		
		private void detach_GameVersion_Languages(GameVersion_Language entity)
		{
			this.SendPropertyChanging();
			entity.GameVersion = null;
		}
		
		private void attach_GameVersion_Regulations(GameVersion_Regulation entity)
		{
			this.SendPropertyChanging();
			entity.GameVersion = this;
		}
		
		private void detach_GameVersion_Regulations(GameVersion_Regulation entity)
		{
			this.SendPropertyChanging();
			entity.GameVersion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GameVersion_Language_ToArtifactorySyncQueue")]
	public partial class GameVersion_Language_ToArtifactorySyncQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Row_ID;
		
		private System.Guid _GameVersion_ID;
		
		private System.DateTime _InsertedTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRow_IDChanging(int value);
    partial void OnRow_IDChanged();
    partial void OnGameVersion_IDChanging(System.Guid value);
    partial void OnGameVersion_IDChanged();
    partial void OnInsertedTimeChanging(System.DateTime value);
    partial void OnInsertedTimeChanged();
    #endregion
		
		public GameVersion_Language_ToArtifactorySyncQueue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Row_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Row_ID
		{
			get
			{
				return this._Row_ID;
			}
			set
			{
				if ((this._Row_ID != value))
				{
					this.OnRow_IDChanging(value);
					this.SendPropertyChanging();
					this._Row_ID = value;
					this.SendPropertyChanged("Row_ID");
					this.OnRow_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameVersion_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GameVersion_ID
		{
			get
			{
				return this._GameVersion_ID;
			}
			set
			{
				if ((this._GameVersion_ID != value))
				{
					this.OnGameVersion_IDChanging(value);
					this.SendPropertyChanging();
					this._GameVersion_ID = value;
					this.SendPropertyChanged("GameVersion_ID");
					this.OnGameVersion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedTime", DbType="DateTime2 NOT NULL")]
		public System.DateTime InsertedTime
		{
			get
			{
				return this._InsertedTime;
			}
			set
			{
				if ((this._InsertedTime != value))
				{
					this.OnInsertedTimeChanging(value);
					this.SendPropertyChanging();
					this._InsertedTime = value;
					this.SendPropertyChanged("InsertedTime");
					this.OnInsertedTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NeverApprovedGames")]
	public partial class NeverApprovedGame
	{
		
		private System.Guid _Game_ID;
		
		private string _GameName;
		
		private int _MainGameType;
		
		private bool _IsExternal;
		
		private int _Technology;
		
		private int _PlatformType;
		
		private System.Nullable<long> _LatestVersion;
		
		public NeverApprovedGame()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Game_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Game_ID
		{
			get
			{
				return this._Game_ID;
			}
			set
			{
				if ((this._Game_ID != value))
				{
					this._Game_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string GameName
		{
			get
			{
				return this._GameName;
			}
			set
			{
				if ((this._GameName != value))
				{
					this._GameName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainGameType", DbType="Int NOT NULL")]
		public int MainGameType
		{
			get
			{
				return this._MainGameType;
			}
			set
			{
				if ((this._MainGameType != value))
				{
					this._MainGameType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExternal", DbType="Bit NOT NULL")]
		public bool IsExternal
		{
			get
			{
				return this._IsExternal;
			}
			set
			{
				if ((this._IsExternal != value))
				{
					this._IsExternal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Technology", DbType="Int NOT NULL")]
		public int Technology
		{
			get
			{
				return this._Technology;
			}
			set
			{
				if ((this._Technology != value))
				{
					this._Technology = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatformType", DbType="Int NOT NULL")]
		public int PlatformType
		{
			get
			{
				return this._PlatformType;
			}
			set
			{
				if ((this._PlatformType != value))
				{
					this._PlatformType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatestVersion", DbType="BigInt")]
		public System.Nullable<long> LatestVersion
		{
			get
			{
				return this._LatestVersion;
			}
			set
			{
				if ((this._LatestVersion != value))
				{
					this._LatestVersion = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LatestVersionForEachGameAndRegulation")]
	public partial class LatestVersionForEachGameAndRegulation
	{
		
		private System.Guid _GameVersion_ID;
		
		private System.Guid _Game_ID;
		
		private int _Technology;
		
		private int _PlatformType;
		
		private string _Regulation;
		
		private System.Nullable<long> _VersionAsLong;
		
		private string _VersionFolder;
		
		private string _GameName;
		
		private int _MainGameType;
		
		private bool _IsExternal;
		
		private string _DownloadUri;
		
		private string _FileName;
		
		private System.Nullable<long> _FileSize;
		
		private string _MD5;
		
		public LatestVersionForEachGameAndRegulation()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameVersion_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GameVersion_ID
		{
			get
			{
				return this._GameVersion_ID;
			}
			set
			{
				if ((this._GameVersion_ID != value))
				{
					this._GameVersion_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Game_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Game_ID
		{
			get
			{
				return this._Game_ID;
			}
			set
			{
				if ((this._Game_ID != value))
				{
					this._Game_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Technology", DbType="Int NOT NULL")]
		public int Technology
		{
			get
			{
				return this._Technology;
			}
			set
			{
				if ((this._Technology != value))
				{
					this._Technology = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatformType", DbType="Int NOT NULL")]
		public int PlatformType
		{
			get
			{
				return this._PlatformType;
			}
			set
			{
				if ((this._PlatformType != value))
				{
					this._PlatformType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regulation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Regulation
		{
			get
			{
				return this._Regulation;
			}
			set
			{
				if ((this._Regulation != value))
				{
					this._Regulation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionAsLong", DbType="BigInt")]
		public System.Nullable<long> VersionAsLong
		{
			get
			{
				return this._VersionAsLong;
			}
			set
			{
				if ((this._VersionAsLong != value))
				{
					this._VersionAsLong = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionFolder", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string VersionFolder
		{
			get
			{
				return this._VersionFolder;
			}
			set
			{
				if ((this._VersionFolder != value))
				{
					this._VersionFolder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string GameName
		{
			get
			{
				return this._GameName;
			}
			set
			{
				if ((this._GameName != value))
				{
					this._GameName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainGameType", DbType="Int NOT NULL")]
		public int MainGameType
		{
			get
			{
				return this._MainGameType;
			}
			set
			{
				if ((this._MainGameType != value))
				{
					this._MainGameType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExternal", DbType="Bit NOT NULL")]
		public bool IsExternal
		{
			get
			{
				return this._IsExternal;
			}
			set
			{
				if ((this._IsExternal != value))
				{
					this._IsExternal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadUri", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DownloadUri
		{
			get
			{
				return this._DownloadUri;
			}
			set
			{
				if ((this._DownloadUri != value))
				{
					this._DownloadUri = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(260) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this._FileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSize", DbType="BigInt")]
		public System.Nullable<long> FileSize
		{
			get
			{
				return this._FileSize;
			}
			set
			{
				if ((this._FileSize != value))
				{
					this._FileSize = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD5", DbType="NVarChar(50)")]
		public string MD5
		{
			get
			{
				return this._MD5;
			}
			set
			{
				if ((this._MD5 != value))
				{
					this._MD5 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegulationType_MandatoryLanguage")]
	public partial class RegulationType_MandatoryLanguage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RegulationTypeLanguage_ID;
		
		private int _RegulationType_ID;
		
		private string _LanguageIso3;
		
		private EntityRef<RegulationType> _RegulationType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegulationTypeLanguage_IDChanging(int value);
    partial void OnRegulationTypeLanguage_IDChanged();
    partial void OnRegulationType_IDChanging(int value);
    partial void OnRegulationType_IDChanged();
    partial void OnLanguageIso3Changing(string value);
    partial void OnLanguageIso3Changed();
    #endregion
		
		public RegulationType_MandatoryLanguage()
		{
			this._RegulationType = default(EntityRef<RegulationType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegulationTypeLanguage_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RegulationTypeLanguage_ID
		{
			get
			{
				return this._RegulationTypeLanguage_ID;
			}
			set
			{
				if ((this._RegulationTypeLanguage_ID != value))
				{
					this.OnRegulationTypeLanguage_IDChanging(value);
					this.SendPropertyChanging();
					this._RegulationTypeLanguage_ID = value;
					this.SendPropertyChanged("RegulationTypeLanguage_ID");
					this.OnRegulationTypeLanguage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegulationType_ID", DbType="Int NOT NULL")]
		public int RegulationType_ID
		{
			get
			{
				return this._RegulationType_ID;
			}
			set
			{
				if ((this._RegulationType_ID != value))
				{
					if (this._RegulationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegulationType_IDChanging(value);
					this.SendPropertyChanging();
					this._RegulationType_ID = value;
					this.SendPropertyChanged("RegulationType_ID");
					this.OnRegulationType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageIso3", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string LanguageIso3
		{
			get
			{
				return this._LanguageIso3;
			}
			set
			{
				if ((this._LanguageIso3 != value))
				{
					this.OnLanguageIso3Changing(value);
					this.SendPropertyChanging();
					this._LanguageIso3 = value;
					this.SendPropertyChanged("LanguageIso3");
					this.OnLanguageIso3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegulationType_RegulationType_MandatoryLanguage", Storage="_RegulationType", ThisKey="RegulationType_ID", OtherKey="RegulationType_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RegulationType RegulationType
		{
			get
			{
				return this._RegulationType.Entity;
			}
			set
			{
				RegulationType previousValue = this._RegulationType.Entity;
				if (((previousValue != value) 
							|| (this._RegulationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegulationType.Entity = null;
						previousValue.RegulationType_MandatoryLanguages.Remove(this);
					}
					this._RegulationType.Entity = value;
					if ((value != null))
					{
						value.RegulationType_MandatoryLanguages.Add(this);
						this._RegulationType_ID = value.RegulationType_ID;
					}
					else
					{
						this._RegulationType_ID = default(int);
					}
					this.SendPropertyChanged("RegulationType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GameVersion_Language")]
	public partial class GameVersion_Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GameVersionLanguage_ID;
		
		private System.Guid _GameVersion_ID;
		
		private string _Regulation;
		
		private string _Language;
		
		private string _LanguageHash;
		
		private string _ArtifactoryLanguage;
		
		private System.Nullable<System.DateTime> _QAApprovalDate;
		
		private string _QAApprovalUser;
		
		private System.Nullable<System.DateTime> _ProductionUploadDate;
		
		private EntityRef<GameVersion> _GameVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGameVersionLanguage_IDChanging(System.Guid value);
    partial void OnGameVersionLanguage_IDChanged();
    partial void OnGameVersion_IDChanging(System.Guid value);
    partial void OnGameVersion_IDChanged();
    partial void OnRegulationChanging(string value);
    partial void OnRegulationChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnLanguageHashChanging(string value);
    partial void OnLanguageHashChanged();
    partial void OnArtifactoryLanguageChanging(string value);
    partial void OnArtifactoryLanguageChanged();
    partial void OnQAApprovalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnQAApprovalDateChanged();
    partial void OnQAApprovalUserChanging(string value);
    partial void OnQAApprovalUserChanged();
    partial void OnProductionUploadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProductionUploadDateChanged();
    #endregion
		
		public GameVersion_Language()
		{
			this._GameVersion = default(EntityRef<GameVersion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameVersionLanguage_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GameVersionLanguage_ID
		{
			get
			{
				return this._GameVersionLanguage_ID;
			}
			set
			{
				if ((this._GameVersionLanguage_ID != value))
				{
					this.OnGameVersionLanguage_IDChanging(value);
					this.SendPropertyChanging();
					this._GameVersionLanguage_ID = value;
					this.SendPropertyChanged("GameVersionLanguage_ID");
					this.OnGameVersionLanguage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameVersion_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GameVersion_ID
		{
			get
			{
				return this._GameVersion_ID;
			}
			set
			{
				if ((this._GameVersion_ID != value))
				{
					if (this._GameVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGameVersion_IDChanging(value);
					this.SendPropertyChanging();
					this._GameVersion_ID = value;
					this.SendPropertyChanged("GameVersion_ID");
					this.OnGameVersion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regulation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Regulation
		{
			get
			{
				return this._Regulation;
			}
			set
			{
				if ((this._Regulation != value))
				{
					this.OnRegulationChanging(value);
					this.SendPropertyChanging();
					this._Regulation = value;
					this.SendPropertyChanged("Regulation");
					this.OnRegulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageHash", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LanguageHash
		{
			get
			{
				return this._LanguageHash;
			}
			set
			{
				if ((this._LanguageHash != value))
				{
					this.OnLanguageHashChanging(value);
					this.SendPropertyChanging();
					this._LanguageHash = value;
					this.SendPropertyChanged("LanguageHash");
					this.OnLanguageHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtifactoryLanguage", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ArtifactoryLanguage
		{
			get
			{
				return this._ArtifactoryLanguage;
			}
			set
			{
				if ((this._ArtifactoryLanguage != value))
				{
					this.OnArtifactoryLanguageChanging(value);
					this.SendPropertyChanging();
					this._ArtifactoryLanguage = value;
					this.SendPropertyChanged("ArtifactoryLanguage");
					this.OnArtifactoryLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QAApprovalDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> QAApprovalDate
		{
			get
			{
				return this._QAApprovalDate;
			}
			set
			{
				if ((this._QAApprovalDate != value))
				{
					this.OnQAApprovalDateChanging(value);
					this.SendPropertyChanging();
					this._QAApprovalDate = value;
					this.SendPropertyChanged("QAApprovalDate");
					this.OnQAApprovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QAApprovalUser", DbType="NVarChar(50)")]
		public string QAApprovalUser
		{
			get
			{
				return this._QAApprovalUser;
			}
			set
			{
				if ((this._QAApprovalUser != value))
				{
					this.OnQAApprovalUserChanging(value);
					this.SendPropertyChanging();
					this._QAApprovalUser = value;
					this.SendPropertyChanged("QAApprovalUser");
					this.OnQAApprovalUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductionUploadDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ProductionUploadDate
		{
			get
			{
				return this._ProductionUploadDate;
			}
			set
			{
				if ((this._ProductionUploadDate != value))
				{
					this.OnProductionUploadDateChanging(value);
					this.SendPropertyChanging();
					this._ProductionUploadDate = value;
					this.SendPropertyChanged("ProductionUploadDate");
					this.OnProductionUploadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameVersion_GameVersion_Language", Storage="_GameVersion", ThisKey="GameVersion_ID", OtherKey="GameVersion_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GameVersion GameVersion
		{
			get
			{
				return this._GameVersion.Entity;
			}
			set
			{
				GameVersion previousValue = this._GameVersion.Entity;
				if (((previousValue != value) 
							|| (this._GameVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GameVersion.Entity = null;
						previousValue.GameVersion_Languages.Remove(this);
					}
					this._GameVersion.Entity = value;
					if ((value != null))
					{
						value.GameVersion_Languages.Add(this);
						this._GameVersion_ID = value.GameVersion_ID;
					}
					else
					{
						this._GameVersion_ID = default(System.Guid);
					}
					this.SendPropertyChanged("GameVersion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GameVersion_LanguageQAApprovalInfo")]
	public partial class GameVersion_LanguageQAApprovalInfo
	{
		
		private System.Guid _GameVersionLanguage_ID;
		
		private System.Nullable<System.DateTime> _QAApprovalDate;
		
		private string _QAApprovalUser;
		
		public GameVersion_LanguageQAApprovalInfo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameVersionLanguage_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GameVersionLanguage_ID
		{
			get
			{
				return this._GameVersionLanguage_ID;
			}
			set
			{
				if ((this._GameVersionLanguage_ID != value))
				{
					this._GameVersionLanguage_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QAApprovalDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> QAApprovalDate
		{
			get
			{
				return this._QAApprovalDate;
			}
			set
			{
				if ((this._QAApprovalDate != value))
				{
					this._QAApprovalDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QAApprovalUser", DbType="NVarChar(50)")]
		public string QAApprovalUser
		{
			get
			{
				return this._QAApprovalUser;
			}
			set
			{
				if ((this._QAApprovalUser != value))
				{
					this._QAApprovalUser = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Game")]
	public partial class Game : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Game_ID;
		
		private string _GameName;
		
		private int _MainGameType;
		
		private bool _IsExternal;
		
		private int _ComponentCategory;
		
		private EntitySet<GameType> _GameTypes;
		
		private EntitySet<GameVersion> _GameVersions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGame_IDChanging(System.Guid value);
    partial void OnGame_IDChanged();
    partial void OnGameNameChanging(string value);
    partial void OnGameNameChanged();
    partial void OnMainGameTypeChanging(int value);
    partial void OnMainGameTypeChanged();
    partial void OnIsExternalChanging(bool value);
    partial void OnIsExternalChanged();
    partial void OnComponentCategoryChanging(int value);
    partial void OnComponentCategoryChanged();
    #endregion
		
		public Game()
		{
			this._GameTypes = new EntitySet<GameType>(new Action<GameType>(this.attach_GameTypes), new Action<GameType>(this.detach_GameTypes));
			this._GameVersions = new EntitySet<GameVersion>(new Action<GameVersion>(this.attach_GameVersions), new Action<GameVersion>(this.detach_GameVersions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Game_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Game_ID
		{
			get
			{
				return this._Game_ID;
			}
			set
			{
				if ((this._Game_ID != value))
				{
					this.OnGame_IDChanging(value);
					this.SendPropertyChanging();
					this._Game_ID = value;
					this.SendPropertyChanged("Game_ID");
					this.OnGame_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string GameName
		{
			get
			{
				return this._GameName;
			}
			set
			{
				if ((this._GameName != value))
				{
					this.OnGameNameChanging(value);
					this.SendPropertyChanging();
					this._GameName = value;
					this.SendPropertyChanged("GameName");
					this.OnGameNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainGameType", DbType="Int NOT NULL")]
		public int MainGameType
		{
			get
			{
				return this._MainGameType;
			}
			set
			{
				if ((this._MainGameType != value))
				{
					this.OnMainGameTypeChanging(value);
					this.SendPropertyChanging();
					this._MainGameType = value;
					this.SendPropertyChanged("MainGameType");
					this.OnMainGameTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExternal", DbType="Bit NOT NULL")]
		public bool IsExternal
		{
			get
			{
				return this._IsExternal;
			}
			set
			{
				if ((this._IsExternal != value))
				{
					this.OnIsExternalChanging(value);
					this.SendPropertyChanging();
					this._IsExternal = value;
					this.SendPropertyChanged("IsExternal");
					this.OnIsExternalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentCategory", DbType="Int NOT NULL")]
		public int ComponentCategory
		{
			get
			{
				return this._ComponentCategory;
			}
			set
			{
				if ((this._ComponentCategory != value))
				{
					this.OnComponentCategoryChanging(value);
					this.SendPropertyChanging();
					this._ComponentCategory = value;
					this.SendPropertyChanged("ComponentCategory");
					this.OnComponentCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Game_GameType", Storage="_GameTypes", ThisKey="Game_ID", OtherKey="Game_ID")]
		public EntitySet<GameType> GameTypes
		{
			get
			{
				return this._GameTypes;
			}
			set
			{
				this._GameTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Game_GameVersion", Storage="_GameVersions", ThisKey="Game_ID", OtherKey="Game_ID")]
		public EntitySet<GameVersion> GameVersions
		{
			get
			{
				return this._GameVersions;
			}
			set
			{
				this._GameVersions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GameTypes(GameType entity)
		{
			this.SendPropertyChanging();
			entity.Game = this;
		}
		
		private void detach_GameTypes(GameType entity)
		{
			this.SendPropertyChanging();
			entity.Game = null;
		}
		
		private void attach_GameVersions(GameVersion entity)
		{
			this.SendPropertyChanging();
			entity.Game = this;
		}
		
		private void detach_GameVersions(GameVersion entity)
		{
			this.SendPropertyChanging();
			entity.Game = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GameVersion_Regulation")]
	public partial class GameVersion_Regulation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GameVersionRegulation_ID;
		
		private System.Guid _GameVersion_ID;
		
		private string _Regulation;
		
		private string _DownloadUri;
		
		private string _FileName;
		
		private System.Nullable<long> _FileSize;
		
		private string _MD5;
		
		private string _SHA1;
		
		private System.Nullable<System.DateTime> _QAApprovalDate;
		
		private string _QAApprovalUser;
		
		private System.Nullable<System.DateTime> _PMApprovalDate;
		
		private string _PMApprovalUser;
		
		private System.Nullable<System.DateTime> _ProductionUploadDate;
		
		private EntityRef<GameVersion> _GameVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGameVersionRegulation_IDChanging(System.Guid value);
    partial void OnGameVersionRegulation_IDChanged();
    partial void OnGameVersion_IDChanging(System.Guid value);
    partial void OnGameVersion_IDChanged();
    partial void OnRegulationChanging(string value);
    partial void OnRegulationChanged();
    partial void OnDownloadUriChanging(string value);
    partial void OnDownloadUriChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileSizeChanging(System.Nullable<long> value);
    partial void OnFileSizeChanged();
    partial void OnMD5Changing(string value);
    partial void OnMD5Changed();
    partial void OnSHA1Changing(string value);
    partial void OnSHA1Changed();
    partial void OnQAApprovalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnQAApprovalDateChanged();
    partial void OnQAApprovalUserChanging(string value);
    partial void OnQAApprovalUserChanged();
    partial void OnPMApprovalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPMApprovalDateChanged();
    partial void OnPMApprovalUserChanging(string value);
    partial void OnPMApprovalUserChanged();
    partial void OnProductionUploadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProductionUploadDateChanged();
    #endregion
		
		public GameVersion_Regulation()
		{
			this._GameVersion = default(EntityRef<GameVersion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameVersionRegulation_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GameVersionRegulation_ID
		{
			get
			{
				return this._GameVersionRegulation_ID;
			}
			set
			{
				if ((this._GameVersionRegulation_ID != value))
				{
					this.OnGameVersionRegulation_IDChanging(value);
					this.SendPropertyChanging();
					this._GameVersionRegulation_ID = value;
					this.SendPropertyChanged("GameVersionRegulation_ID");
					this.OnGameVersionRegulation_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameVersion_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GameVersion_ID
		{
			get
			{
				return this._GameVersion_ID;
			}
			set
			{
				if ((this._GameVersion_ID != value))
				{
					if (this._GameVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGameVersion_IDChanging(value);
					this.SendPropertyChanging();
					this._GameVersion_ID = value;
					this.SendPropertyChanged("GameVersion_ID");
					this.OnGameVersion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regulation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Regulation
		{
			get
			{
				return this._Regulation;
			}
			set
			{
				if ((this._Regulation != value))
				{
					this.OnRegulationChanging(value);
					this.SendPropertyChanging();
					this._Regulation = value;
					this.SendPropertyChanged("Regulation");
					this.OnRegulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadUri", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DownloadUri
		{
			get
			{
				return this._DownloadUri;
			}
			set
			{
				if ((this._DownloadUri != value))
				{
					this.OnDownloadUriChanging(value);
					this.SendPropertyChanging();
					this._DownloadUri = value;
					this.SendPropertyChanged("DownloadUri");
					this.OnDownloadUriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(260) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSize", DbType="BigInt")]
		public System.Nullable<long> FileSize
		{
			get
			{
				return this._FileSize;
			}
			set
			{
				if ((this._FileSize != value))
				{
					this.OnFileSizeChanging(value);
					this.SendPropertyChanging();
					this._FileSize = value;
					this.SendPropertyChanged("FileSize");
					this.OnFileSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD5", DbType="NVarChar(50)")]
		public string MD5
		{
			get
			{
				return this._MD5;
			}
			set
			{
				if ((this._MD5 != value))
				{
					this.OnMD5Changing(value);
					this.SendPropertyChanging();
					this._MD5 = value;
					this.SendPropertyChanged("MD5");
					this.OnMD5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHA1", DbType="NVarChar(50)")]
		public string SHA1
		{
			get
			{
				return this._SHA1;
			}
			set
			{
				if ((this._SHA1 != value))
				{
					this.OnSHA1Changing(value);
					this.SendPropertyChanging();
					this._SHA1 = value;
					this.SendPropertyChanged("SHA1");
					this.OnSHA1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QAApprovalDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> QAApprovalDate
		{
			get
			{
				return this._QAApprovalDate;
			}
			set
			{
				if ((this._QAApprovalDate != value))
				{
					this.OnQAApprovalDateChanging(value);
					this.SendPropertyChanging();
					this._QAApprovalDate = value;
					this.SendPropertyChanged("QAApprovalDate");
					this.OnQAApprovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QAApprovalUser", DbType="NVarChar(50)")]
		public string QAApprovalUser
		{
			get
			{
				return this._QAApprovalUser;
			}
			set
			{
				if ((this._QAApprovalUser != value))
				{
					this.OnQAApprovalUserChanging(value);
					this.SendPropertyChanging();
					this._QAApprovalUser = value;
					this.SendPropertyChanged("QAApprovalUser");
					this.OnQAApprovalUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMApprovalDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> PMApprovalDate
		{
			get
			{
				return this._PMApprovalDate;
			}
			set
			{
				if ((this._PMApprovalDate != value))
				{
					this.OnPMApprovalDateChanging(value);
					this.SendPropertyChanging();
					this._PMApprovalDate = value;
					this.SendPropertyChanged("PMApprovalDate");
					this.OnPMApprovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMApprovalUser", DbType="NVarChar(50)")]
		public string PMApprovalUser
		{
			get
			{
				return this._PMApprovalUser;
			}
			set
			{
				if ((this._PMApprovalUser != value))
				{
					this.OnPMApprovalUserChanging(value);
					this.SendPropertyChanging();
					this._PMApprovalUser = value;
					this.SendPropertyChanged("PMApprovalUser");
					this.OnPMApprovalUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductionUploadDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ProductionUploadDate
		{
			get
			{
				return this._ProductionUploadDate;
			}
			set
			{
				if ((this._ProductionUploadDate != value))
				{
					this.OnProductionUploadDateChanging(value);
					this.SendPropertyChanging();
					this._ProductionUploadDate = value;
					this.SendPropertyChanged("ProductionUploadDate");
					this.OnProductionUploadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameVersion_GameVersion_Regulation", Storage="_GameVersion", ThisKey="GameVersion_ID", OtherKey="GameVersion_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GameVersion GameVersion
		{
			get
			{
				return this._GameVersion.Entity;
			}
			set
			{
				GameVersion previousValue = this._GameVersion.Entity;
				if (((previousValue != value) 
							|| (this._GameVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GameVersion.Entity = null;
						previousValue.GameVersion_Regulations.Remove(this);
					}
					this._GameVersion.Entity = value;
					if ((value != null))
					{
						value.GameVersion_Regulations.Add(this);
						this._GameVersion_ID = value.GameVersion_ID;
					}
					else
					{
						this._GameVersion_ID = default(System.Guid);
					}
					this.SendPropertyChanged("GameVersion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LatestApprovedGameVersionForEachRegulation")]
	public partial class LatestApprovedGameVersionForEachRegulation
	{
		
		private System.Guid _Game_ID;
		
		private string _GameName;
		
		private int _MainGameType;
		
		private System.Nullable<long> _LatestVersion;
		
		private bool _IsExternal;
		
		private int _Technology;
		
		private int _PlatformType;
		
		private int _RegulationType_ID;
		
		private string _Regulation;
		
		private System.Nullable<System.Guid> _QA_VersionID;
		
		private System.Nullable<long> _QA_Version;
		
		private string _QA_DownloadUri;
		
		private string _QA_FileName;
		
		private System.Nullable<long> _QA_FileSize;
		
		private string _QA_MD5;
		
		private System.Nullable<System.Guid> _PM_VersionID;
		
		private System.Nullable<long> _PM_Version;
		
		private string _PM_DownloadUri;
		
		private string _PM_FileName;
		
		private System.Nullable<long> _PM_FileSize;
		
		private string _PM_MD5;
		
		private System.Nullable<System.Guid> _PROD_VersionID;
		
		private System.Nullable<long> _PROD_Version;
		
		private string _PROD_DownloadUri;
		
		private string _PROD_FileName;
		
		private System.Nullable<long> _PROD_FileSize;
		
		private string _PROD_MD5;
		
		private System.Nullable<long> _LatestQAApprovedVersion;
		
		public LatestApprovedGameVersionForEachRegulation()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Game_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Game_ID
		{
			get
			{
				return this._Game_ID;
			}
			set
			{
				if ((this._Game_ID != value))
				{
					this._Game_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string GameName
		{
			get
			{
				return this._GameName;
			}
			set
			{
				if ((this._GameName != value))
				{
					this._GameName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainGameType", DbType="Int NOT NULL")]
		public int MainGameType
		{
			get
			{
				return this._MainGameType;
			}
			set
			{
				if ((this._MainGameType != value))
				{
					this._MainGameType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatestVersion", DbType="BigInt")]
		public System.Nullable<long> LatestVersion
		{
			get
			{
				return this._LatestVersion;
			}
			set
			{
				if ((this._LatestVersion != value))
				{
					this._LatestVersion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExternal", DbType="Bit NOT NULL")]
		public bool IsExternal
		{
			get
			{
				return this._IsExternal;
			}
			set
			{
				if ((this._IsExternal != value))
				{
					this._IsExternal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Technology", DbType="Int NOT NULL")]
		public int Technology
		{
			get
			{
				return this._Technology;
			}
			set
			{
				if ((this._Technology != value))
				{
					this._Technology = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatformType", DbType="Int NOT NULL")]
		public int PlatformType
		{
			get
			{
				return this._PlatformType;
			}
			set
			{
				if ((this._PlatformType != value))
				{
					this._PlatformType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegulationType_ID", DbType="Int NOT NULL")]
		public int RegulationType_ID
		{
			get
			{
				return this._RegulationType_ID;
			}
			set
			{
				if ((this._RegulationType_ID != value))
				{
					this._RegulationType_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regulation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Regulation
		{
			get
			{
				return this._Regulation;
			}
			set
			{
				if ((this._Regulation != value))
				{
					this._Regulation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QA_VersionID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> QA_VersionID
		{
			get
			{
				return this._QA_VersionID;
			}
			set
			{
				if ((this._QA_VersionID != value))
				{
					this._QA_VersionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QA_Version", DbType="BigInt")]
		public System.Nullable<long> QA_Version
		{
			get
			{
				return this._QA_Version;
			}
			set
			{
				if ((this._QA_Version != value))
				{
					this._QA_Version = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QA_DownloadUri", DbType="NVarChar(MAX)")]
		public string QA_DownloadUri
		{
			get
			{
				return this._QA_DownloadUri;
			}
			set
			{
				if ((this._QA_DownloadUri != value))
				{
					this._QA_DownloadUri = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QA_FileName", DbType="NVarChar(260)")]
		public string QA_FileName
		{
			get
			{
				return this._QA_FileName;
			}
			set
			{
				if ((this._QA_FileName != value))
				{
					this._QA_FileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QA_FileSize", DbType="BigInt")]
		public System.Nullable<long> QA_FileSize
		{
			get
			{
				return this._QA_FileSize;
			}
			set
			{
				if ((this._QA_FileSize != value))
				{
					this._QA_FileSize = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QA_MD5", DbType="NVarChar(50)")]
		public string QA_MD5
		{
			get
			{
				return this._QA_MD5;
			}
			set
			{
				if ((this._QA_MD5 != value))
				{
					this._QA_MD5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PM_VersionID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PM_VersionID
		{
			get
			{
				return this._PM_VersionID;
			}
			set
			{
				if ((this._PM_VersionID != value))
				{
					this._PM_VersionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PM_Version", DbType="BigInt")]
		public System.Nullable<long> PM_Version
		{
			get
			{
				return this._PM_Version;
			}
			set
			{
				if ((this._PM_Version != value))
				{
					this._PM_Version = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PM_DownloadUri", DbType="NVarChar(MAX)")]
		public string PM_DownloadUri
		{
			get
			{
				return this._PM_DownloadUri;
			}
			set
			{
				if ((this._PM_DownloadUri != value))
				{
					this._PM_DownloadUri = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PM_FileName", DbType="NVarChar(260)")]
		public string PM_FileName
		{
			get
			{
				return this._PM_FileName;
			}
			set
			{
				if ((this._PM_FileName != value))
				{
					this._PM_FileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PM_FileSize", DbType="BigInt")]
		public System.Nullable<long> PM_FileSize
		{
			get
			{
				return this._PM_FileSize;
			}
			set
			{
				if ((this._PM_FileSize != value))
				{
					this._PM_FileSize = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PM_MD5", DbType="NVarChar(50)")]
		public string PM_MD5
		{
			get
			{
				return this._PM_MD5;
			}
			set
			{
				if ((this._PM_MD5 != value))
				{
					this._PM_MD5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_VersionID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PROD_VersionID
		{
			get
			{
				return this._PROD_VersionID;
			}
			set
			{
				if ((this._PROD_VersionID != value))
				{
					this._PROD_VersionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_Version", DbType="BigInt")]
		public System.Nullable<long> PROD_Version
		{
			get
			{
				return this._PROD_Version;
			}
			set
			{
				if ((this._PROD_Version != value))
				{
					this._PROD_Version = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_DownloadUri", DbType="NVarChar(MAX)")]
		public string PROD_DownloadUri
		{
			get
			{
				return this._PROD_DownloadUri;
			}
			set
			{
				if ((this._PROD_DownloadUri != value))
				{
					this._PROD_DownloadUri = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_FileName", DbType="NVarChar(260)")]
		public string PROD_FileName
		{
			get
			{
				return this._PROD_FileName;
			}
			set
			{
				if ((this._PROD_FileName != value))
				{
					this._PROD_FileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_FileSize", DbType="BigInt")]
		public System.Nullable<long> PROD_FileSize
		{
			get
			{
				return this._PROD_FileSize;
			}
			set
			{
				if ((this._PROD_FileSize != value))
				{
					this._PROD_FileSize = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_MD5", DbType="NVarChar(50)")]
		public string PROD_MD5
		{
			get
			{
				return this._PROD_MD5;
			}
			set
			{
				if ((this._PROD_MD5 != value))
				{
					this._PROD_MD5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatestQAApprovedVersion", DbType="BigInt")]
		public System.Nullable<long> LatestQAApprovedVersion
		{
			get
			{
				return this._LatestQAApprovedVersion;
			}
			set
			{
				if ((this._LatestQAApprovedVersion != value))
				{
					this._LatestQAApprovedVersion = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
