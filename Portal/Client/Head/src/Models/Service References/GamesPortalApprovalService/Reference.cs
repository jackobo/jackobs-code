//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GamesPortal.Client.Models.GamesPortalApprovalService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAvailableQAApprovalStatesResponse", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service")]
    [System.SerializableAttribute()]
    public partial class GetAvailableQAApprovalStatesResponse : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] StatesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] States {
            get {
                return this.StatesField;
            }
            set {
                this.StatesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAvailablePMApprovalStatesResponse", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service")]
    [System.SerializableAttribute()]
    public partial class GetAvailablePMApprovalStatesResponse : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] StatesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] States {
            get {
                return this.StatesField;
            }
            set {
                this.StatesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApproveRequestBase", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GamesPortal.Client.Models.GamesPortalApprovalService.PMApproveRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GamesPortal.Client.Models.GamesPortalApprovalService.QAApproveRequest))]
    public partial class ApproveRequestBase : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GameVersionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] RegulationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GameVersionID {
            get {
                return this.GameVersionIDField;
            }
            set {
                this.GameVersionIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Regulations {
            get {
                return this.RegulationsField;
            }
            set {
                this.RegulationsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PMApproveRequest", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service")]
    [System.SerializableAttribute()]
    public partial class PMApproveRequest : GamesPortal.Client.Models.GamesPortalApprovalService.ApproveRequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QAApproveRequest", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service")]
    [System.SerializableAttribute()]
    public partial class QAApproveRequest : GamesPortal.Client.Models.GamesPortalApprovalService.ApproveRequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LanguageApproveRequest", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service")]
    [System.SerializableAttribute()]
    public partial class LanguageApproveRequest : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GameVersionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] LanguagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GameVersionId {
            get {
                return this.GameVersionIdField;
            }
            set {
                this.GameVersionIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Languages {
            get {
                return this.LanguagesField;
            }
            set {
                this.LanguagesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ForceSynchronizationResponse", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service")]
    [System.SerializableAttribute()]
    public partial class ForceSynchronizationResponse : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SynchronizationAlreadyInProgressField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SynchronizationAlreadyInProgress {
            get {
                return this.SynchronizationAlreadyInProgressField;
            }
            set {
                this.SynchronizationAlreadyInProgressField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImplicitForceGameSynchronizationRequest", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service")]
    [System.SerializableAttribute()]
    public partial class ImplicitForceGameSynchronizationRequest : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MainGameTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isExternalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MainGameType {
            get {
                return this.MainGameTypeField;
            }
            set {
                this.MainGameTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isExternal {
            get {
                return this.isExternalField;
            }
            set {
                this.isExternalField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ForceLanguageSynchronizationRequest", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service")]
    [System.SerializableAttribute()]
    public partial class ForceLanguageSynchronizationRequest : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GamesPortal.Client.Models.GamesPortalApprovalService.GameTechnology GameTechnologyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GameTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GamesPortal.Client.Models.GamesPortalApprovalService.PlatformType PlatformTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GamesPortal.Client.Models.GamesPortalApprovalService.GameTechnology GameTechnology {
            get {
                return this.GameTechnologyField;
            }
            set {
                this.GameTechnologyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GameType {
            get {
                return this.GameTypeField;
            }
            set {
                this.GameTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GamesPortal.Client.Models.GamesPortalApprovalService.PlatformType PlatformType {
            get {
                return this.PlatformTypeField;
            }
            set {
                this.PlatformTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                this.VersionField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameTechnology", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    public enum GameTechnology : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Flash = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Html5 = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlatformType", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    public enum PlatformType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PC = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mobile = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcAndMobile = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GamesPortalApprovalService.IGamesPortalApprovalService")]
    public interface IGamesPortalApprovalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalApprovalService/GetAvailableQAApprovalStates", ReplyAction="http://tempuri.org/IGamesPortalApprovalService/GetAvailableQAApprovalStatesRespon" +
            "se")]
        GamesPortal.Client.Models.GamesPortalApprovalService.GetAvailableQAApprovalStatesResponse GetAvailableQAApprovalStates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalApprovalService/GetAvailableQAApprovalStates", ReplyAction="http://tempuri.org/IGamesPortalApprovalService/GetAvailableQAApprovalStatesRespon" +
            "se")]
        System.Threading.Tasks.Task<GamesPortal.Client.Models.GamesPortalApprovalService.GetAvailableQAApprovalStatesResponse> GetAvailableQAApprovalStatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalApprovalService/GetAvailablePMApprovalStates", ReplyAction="http://tempuri.org/IGamesPortalApprovalService/GetAvailablePMApprovalStatesRespon" +
            "se")]
        GamesPortal.Client.Models.GamesPortalApprovalService.GetAvailablePMApprovalStatesResponse GetAvailablePMApprovalStates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalApprovalService/GetAvailablePMApprovalStates", ReplyAction="http://tempuri.org/IGamesPortalApprovalService/GetAvailablePMApprovalStatesRespon" +
            "se")]
        System.Threading.Tasks.Task<GamesPortal.Client.Models.GamesPortalApprovalService.GetAvailablePMApprovalStatesResponse> GetAvailablePMApprovalStatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalApprovalService/QAApprove", ReplyAction="http://tempuri.org/IGamesPortalApprovalService/QAApproveResponse")]
        void QAApprove(GamesPortal.Client.Models.GamesPortalApprovalService.QAApproveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalApprovalService/QAApprove", ReplyAction="http://tempuri.org/IGamesPortalApprovalService/QAApproveResponse")]
        System.Threading.Tasks.Task QAApproveAsync(GamesPortal.Client.Models.GamesPortalApprovalService.QAApproveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalApprovalService/PMApprove", ReplyAction="http://tempuri.org/IGamesPortalApprovalService/PMApproveResponse")]
        void PMApprove(GamesPortal.Client.Models.GamesPortalApprovalService.PMApproveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalApprovalService/PMApprove", ReplyAction="http://tempuri.org/IGamesPortalApprovalService/PMApproveResponse")]
        System.Threading.Tasks.Task PMApproveAsync(GamesPortal.Client.Models.GamesPortalApprovalService.PMApproveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalApprovalService/LanguageApprove", ReplyAction="http://tempuri.org/IGamesPortalApprovalService/LanguageApproveResponse")]
        void LanguageApprove(GamesPortal.Client.Models.GamesPortalApprovalService.LanguageApproveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalApprovalService/LanguageApprove", ReplyAction="http://tempuri.org/IGamesPortalApprovalService/LanguageApproveResponse")]
        System.Threading.Tasks.Task LanguageApproveAsync(GamesPortal.Client.Models.GamesPortalApprovalService.LanguageApproveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalApprovalService/ForceSynchronization", ReplyAction="http://tempuri.org/IGamesPortalApprovalService/ForceSynchronizationResponse")]
        GamesPortal.Client.Models.GamesPortalApprovalService.ForceSynchronizationResponse ForceSynchronization();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalApprovalService/ForceSynchronization", ReplyAction="http://tempuri.org/IGamesPortalApprovalService/ForceSynchronizationResponse")]
        System.Threading.Tasks.Task<GamesPortal.Client.Models.GamesPortalApprovalService.ForceSynchronizationResponse> ForceSynchronizationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalApprovalService/ForceGameSynchronization", ReplyAction="http://tempuri.org/IGamesPortalApprovalService/ForceGameSynchronizationResponse")]
        void ForceGameSynchronization(GamesPortal.Client.Models.GamesPortalApprovalService.ImplicitForceGameSynchronizationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalApprovalService/ForceGameSynchronization", ReplyAction="http://tempuri.org/IGamesPortalApprovalService/ForceGameSynchronizationResponse")]
        System.Threading.Tasks.Task ForceGameSynchronizationAsync(GamesPortal.Client.Models.GamesPortalApprovalService.ImplicitForceGameSynchronizationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalApprovalService/ForceLanguageSynchronization", ReplyAction="http://tempuri.org/IGamesPortalApprovalService/ForceLanguageSynchronizationRespon" +
            "se")]
        void ForceLanguageSynchronization(GamesPortal.Client.Models.GamesPortalApprovalService.ForceLanguageSynchronizationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalApprovalService/ForceLanguageSynchronization", ReplyAction="http://tempuri.org/IGamesPortalApprovalService/ForceLanguageSynchronizationRespon" +
            "se")]
        System.Threading.Tasks.Task ForceLanguageSynchronizationAsync(GamesPortal.Client.Models.GamesPortalApprovalService.ForceLanguageSynchronizationRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGamesPortalApprovalServiceChannel : GamesPortal.Client.Models.GamesPortalApprovalService.IGamesPortalApprovalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GamesPortalApprovalServiceClient : System.ServiceModel.ClientBase<GamesPortal.Client.Models.GamesPortalApprovalService.IGamesPortalApprovalService>, GamesPortal.Client.Models.GamesPortalApprovalService.IGamesPortalApprovalService {
        
        public GamesPortalApprovalServiceClient() {
        }
        
        public GamesPortalApprovalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GamesPortalApprovalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GamesPortalApprovalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GamesPortalApprovalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GamesPortal.Client.Models.GamesPortalApprovalService.GetAvailableQAApprovalStatesResponse GetAvailableQAApprovalStates() {
            return base.Channel.GetAvailableQAApprovalStates();
        }
        
        public System.Threading.Tasks.Task<GamesPortal.Client.Models.GamesPortalApprovalService.GetAvailableQAApprovalStatesResponse> GetAvailableQAApprovalStatesAsync() {
            return base.Channel.GetAvailableQAApprovalStatesAsync();
        }
        
        public GamesPortal.Client.Models.GamesPortalApprovalService.GetAvailablePMApprovalStatesResponse GetAvailablePMApprovalStates() {
            return base.Channel.GetAvailablePMApprovalStates();
        }
        
        public System.Threading.Tasks.Task<GamesPortal.Client.Models.GamesPortalApprovalService.GetAvailablePMApprovalStatesResponse> GetAvailablePMApprovalStatesAsync() {
            return base.Channel.GetAvailablePMApprovalStatesAsync();
        }
        
        public void QAApprove(GamesPortal.Client.Models.GamesPortalApprovalService.QAApproveRequest request) {
            base.Channel.QAApprove(request);
        }
        
        public System.Threading.Tasks.Task QAApproveAsync(GamesPortal.Client.Models.GamesPortalApprovalService.QAApproveRequest request) {
            return base.Channel.QAApproveAsync(request);
        }
        
        public void PMApprove(GamesPortal.Client.Models.GamesPortalApprovalService.PMApproveRequest request) {
            base.Channel.PMApprove(request);
        }
        
        public System.Threading.Tasks.Task PMApproveAsync(GamesPortal.Client.Models.GamesPortalApprovalService.PMApproveRequest request) {
            return base.Channel.PMApproveAsync(request);
        }
        
        public void LanguageApprove(GamesPortal.Client.Models.GamesPortalApprovalService.LanguageApproveRequest request) {
            base.Channel.LanguageApprove(request);
        }
        
        public System.Threading.Tasks.Task LanguageApproveAsync(GamesPortal.Client.Models.GamesPortalApprovalService.LanguageApproveRequest request) {
            return base.Channel.LanguageApproveAsync(request);
        }
        
        public GamesPortal.Client.Models.GamesPortalApprovalService.ForceSynchronizationResponse ForceSynchronization() {
            return base.Channel.ForceSynchronization();
        }
        
        public System.Threading.Tasks.Task<GamesPortal.Client.Models.GamesPortalApprovalService.ForceSynchronizationResponse> ForceSynchronizationAsync() {
            return base.Channel.ForceSynchronizationAsync();
        }
        
        public void ForceGameSynchronization(GamesPortal.Client.Models.GamesPortalApprovalService.ImplicitForceGameSynchronizationRequest request) {
            base.Channel.ForceGameSynchronization(request);
        }
        
        public System.Threading.Tasks.Task ForceGameSynchronizationAsync(GamesPortal.Client.Models.GamesPortalApprovalService.ImplicitForceGameSynchronizationRequest request) {
            return base.Channel.ForceGameSynchronizationAsync(request);
        }
        
        public void ForceLanguageSynchronization(GamesPortal.Client.Models.GamesPortalApprovalService.ForceLanguageSynchronizationRequest request) {
            base.Channel.ForceLanguageSynchronization(request);
        }
        
        public System.Threading.Tasks.Task ForceLanguageSynchronizationAsync(GamesPortal.Client.Models.GamesPortalApprovalService.ForceLanguageSynchronizationRequest request) {
            return base.Channel.ForceLanguageSynchronizationAsync(request);
        }
    }
}
