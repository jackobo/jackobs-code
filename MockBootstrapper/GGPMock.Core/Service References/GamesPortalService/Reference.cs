//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GGPMockBootstrapper.GamesPortalService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGameResponse", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service")]
    [System.SerializableAttribute()]
    public partial class GetGameResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.GameDTO GameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.GameDTO Game {
            get {
                return this.GameField;
            }
            set {
                if ((object.ReferenceEquals(this.GameField, value) != true)) {
                    this.GameField = value;
                    this.RaisePropertyChanged("Game");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameDTO", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    [System.SerializableAttribute()]
    public partial class GameDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.GamingComponentCategory CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.GameTypeDTO[] GameTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExternalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MainGameTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.GameInfrastructureDTO[] SupportedInfrastructuresField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.GamingComponentCategory Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((this.CategoryField.Equals(value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.GameTypeDTO[] GameTypes {
            get {
                return this.GameTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.GameTypesField, value) != true)) {
                    this.GameTypesField = value;
                    this.RaisePropertyChanged("GameTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExternal {
            get {
                return this.IsExternalField;
            }
            set {
                if ((this.IsExternalField.Equals(value) != true)) {
                    this.IsExternalField = value;
                    this.RaisePropertyChanged("IsExternal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MainGameType {
            get {
                return this.MainGameTypeField;
            }
            set {
                if ((this.MainGameTypeField.Equals(value) != true)) {
                    this.MainGameTypeField = value;
                    this.RaisePropertyChanged("MainGameType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.GameInfrastructureDTO[] SupportedInfrastructures {
            get {
                return this.SupportedInfrastructuresField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportedInfrastructuresField, value) != true)) {
                    this.SupportedInfrastructuresField = value;
                    this.RaisePropertyChanged("SupportedInfrastructures");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GamingComponentCategory", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    public enum GamingComponentCategory : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wrapper = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chill = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Game = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    [System.SerializableAttribute()]
    public partial class GameTypeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OperatorIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OperatorId {
            get {
                return this.OperatorIdField;
            }
            set {
                if ((this.OperatorIdField.Equals(value) != true)) {
                    this.OperatorIdField = value;
                    this.RaisePropertyChanged("OperatorId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameInfrastructureDTO", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    [System.SerializableAttribute()]
    public partial class GameInfrastructureDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.GameTechnology GameTechnologyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.PlatformType PlatformTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.GameTechnology GameTechnology {
            get {
                return this.GameTechnologyField;
            }
            set {
                if ((this.GameTechnologyField.Equals(value) != true)) {
                    this.GameTechnologyField = value;
                    this.RaisePropertyChanged("GameTechnology");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.PlatformType PlatformType {
            get {
                return this.PlatformTypeField;
            }
            set {
                if ((this.PlatformTypeField.Equals(value) != true)) {
                    this.PlatformTypeField = value;
                    this.RaisePropertyChanged("PlatformType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameTechnology", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    public enum GameTechnology : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Flash = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Html5 = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlatformType", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    public enum PlatformType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PC = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mobile = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcAndMobile = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllGamesResponse", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service")]
    [System.SerializableAttribute()]
    public partial class GetAllGamesResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.GameDTO[] GamesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.GameDTO[] Games {
            get {
                return this.GamesField;
            }
            set {
                if ((object.ReferenceEquals(this.GamesField, value) != true)) {
                    this.GamesField = value;
                    this.RaisePropertyChanged("Games");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGameVersionsResponse", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service")]
    [System.SerializableAttribute()]
    public partial class GetGameVersionsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.GameVersionDTO[] GameVersionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.GameVersionDTO[] GameVersions {
            get {
                return this.GameVersionsField;
            }
            set {
                if ((object.ReferenceEquals(this.GameVersionsField, value) != true)) {
                    this.GameVersionsField = value;
                    this.RaisePropertyChanged("GameVersions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameVersionDTO", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    [System.SerializableAttribute()]
    public partial class GameVersionDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.GameInfrastructureDTO GameInfrastructureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.GameVersionPropertyChangeHistoryDTO[] PropertiesChangeHistoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.GameVersionRegulationDTO[] RegulationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TriggeredByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VersionAsNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid VersionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.GameInfrastructureDTO GameInfrastructure {
            get {
                return this.GameInfrastructureField;
            }
            set {
                if ((object.ReferenceEquals(this.GameInfrastructureField, value) != true)) {
                    this.GameInfrastructureField = value;
                    this.RaisePropertyChanged("GameInfrastructure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.GameVersionPropertyChangeHistoryDTO[] PropertiesChangeHistory {
            get {
                return this.PropertiesChangeHistoryField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesChangeHistoryField, value) != true)) {
                    this.PropertiesChangeHistoryField = value;
                    this.RaisePropertyChanged("PropertiesChangeHistory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.GameVersionRegulationDTO[] Regulations {
            get {
                return this.RegulationsField;
            }
            set {
                if ((object.ReferenceEquals(this.RegulationsField, value) != true)) {
                    this.RegulationsField = value;
                    this.RaisePropertyChanged("Regulations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TriggeredBy {
            get {
                return this.TriggeredByField;
            }
            set {
                if ((object.ReferenceEquals(this.TriggeredByField, value) != true)) {
                    this.TriggeredByField = value;
                    this.RaisePropertyChanged("TriggeredBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VersionAsNumber {
            get {
                return this.VersionAsNumberField;
            }
            set {
                if ((this.VersionAsNumberField.Equals(value) != true)) {
                    this.VersionAsNumberField = value;
                    this.RaisePropertyChanged("VersionAsNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid VersionId {
            get {
                return this.VersionIdField;
            }
            set {
                if ((this.VersionIdField.Equals(value) != true)) {
                    this.VersionIdField = value;
                    this.RaisePropertyChanged("VersionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameVersionPropertyChangeHistoryDTO", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    [System.SerializableAttribute()]
    public partial class GameVersionPropertyChangeHistoryDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegulationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeType {
            get {
                return this.ChangeTypeField;
            }
            set {
                if ((this.ChangeTypeField.Equals(value) != true)) {
                    this.ChangeTypeField = value;
                    this.RaisePropertyChanged("ChangeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewValue {
            get {
                return this.NewValueField;
            }
            set {
                if ((object.ReferenceEquals(this.NewValueField, value) != true)) {
                    this.NewValueField = value;
                    this.RaisePropertyChanged("NewValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldValue {
            get {
                return this.OldValueField;
            }
            set {
                if ((object.ReferenceEquals(this.OldValueField, value) != true)) {
                    this.OldValueField = value;
                    this.RaisePropertyChanged("OldValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyKey {
            get {
                return this.PropertyKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyKeyField, value) != true)) {
                    this.PropertyKeyField = value;
                    this.RaisePropertyChanged("PropertyKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Regulation {
            get {
                return this.RegulationField;
            }
            set {
                if ((object.ReferenceEquals(this.RegulationField, value) != true)) {
                    this.RegulationField = value;
                    this.RaisePropertyChanged("Regulation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameVersionRegulationDTO", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    [System.SerializableAttribute()]
    public partial class GameVersionRegulationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.GameVersionRegulationClientTypeDTO[] ClientTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.DownloadInfoDTO DownloadInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.GameVersionRegulationLanguageDTO[] LanguagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegulationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.GameVersionRegulationClientTypeDTO[] ClientTypes {
            get {
                return this.ClientTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientTypesField, value) != true)) {
                    this.ClientTypesField = value;
                    this.RaisePropertyChanged("ClientTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.DownloadInfoDTO DownloadInfo {
            get {
                return this.DownloadInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadInfoField, value) != true)) {
                    this.DownloadInfoField = value;
                    this.RaisePropertyChanged("DownloadInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.GameVersionRegulationLanguageDTO[] Languages {
            get {
                return this.LanguagesField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguagesField, value) != true)) {
                    this.LanguagesField = value;
                    this.RaisePropertyChanged("Languages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Regulation {
            get {
                return this.RegulationField;
            }
            set {
                if ((object.ReferenceEquals(this.RegulationField, value) != true)) {
                    this.RegulationField = value;
                    this.RaisePropertyChanged("Regulation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownloadInfoDTO", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    [System.SerializableAttribute()]
    public partial class DownloadInfoDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MD5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UriField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileSize {
            get {
                return this.FileSizeField;
            }
            set {
                if ((this.FileSizeField.Equals(value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MD5 {
            get {
                return this.MD5Field;
            }
            set {
                if ((object.ReferenceEquals(this.MD5Field, value) != true)) {
                    this.MD5Field = value;
                    this.RaisePropertyChanged("MD5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uri {
            get {
                return this.UriField;
            }
            set {
                if ((object.ReferenceEquals(this.UriField, value) != true)) {
                    this.UriField = value;
                    this.RaisePropertyChanged("Uri");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameVersionRegulationClientTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    [System.SerializableAttribute()]
    public partial class GameVersionRegulationClientTypeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.ApprovalInfoDTO PMApprovalInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.ProductionUploadInfoDTO ProductionUploadInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.ApprovalInfoDTO QAApprovalInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientType {
            get {
                return this.ClientTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientTypeField, value) != true)) {
                    this.ClientTypeField = value;
                    this.RaisePropertyChanged("ClientType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.ApprovalInfoDTO PMApprovalInfo {
            get {
                return this.PMApprovalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PMApprovalInfoField, value) != true)) {
                    this.PMApprovalInfoField = value;
                    this.RaisePropertyChanged("PMApprovalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.ProductionUploadInfoDTO ProductionUploadInfo {
            get {
                return this.ProductionUploadInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductionUploadInfoField, value) != true)) {
                    this.ProductionUploadInfoField = value;
                    this.RaisePropertyChanged("ProductionUploadInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.ApprovalInfoDTO QAApprovalInfo {
            get {
                return this.QAApprovalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.QAApprovalInfoField, value) != true)) {
                    this.QAApprovalInfoField = value;
                    this.RaisePropertyChanged("QAApprovalInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameVersionRegulationLanguageDTO", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    [System.SerializableAttribute()]
    public partial class GameVersionRegulationLanguageDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMandatoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.LanguageDTO LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.ProductionUploadInfoDTO ProductionUploadInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.ApprovalInfoDTO QaApprovalInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMandatory {
            get {
                return this.IsMandatoryField;
            }
            set {
                if ((this.IsMandatoryField.Equals(value) != true)) {
                    this.IsMandatoryField = value;
                    this.RaisePropertyChanged("IsMandatory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.LanguageDTO Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.ProductionUploadInfoDTO ProductionUploadInfo {
            get {
                return this.ProductionUploadInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductionUploadInfoField, value) != true)) {
                    this.ProductionUploadInfoField = value;
                    this.RaisePropertyChanged("ProductionUploadInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.ApprovalInfoDTO QaApprovalInfo {
            get {
                return this.QaApprovalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.QaApprovalInfoField, value) != true)) {
                    this.QaApprovalInfoField = value;
                    this.RaisePropertyChanged("QaApprovalInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApprovalInfoDTO", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    [System.SerializableAttribute()]
    public partial class ApprovalInfoDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ApprovalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApprovedByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ApprovalDate {
            get {
                return this.ApprovalDateField;
            }
            set {
                if ((this.ApprovalDateField.Equals(value) != true)) {
                    this.ApprovalDateField = value;
                    this.RaisePropertyChanged("ApprovalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApprovedBy {
            get {
                return this.ApprovedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovedByField, value) != true)) {
                    this.ApprovedByField = value;
                    this.RaisePropertyChanged("ApprovedBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductionUploadInfoDTO", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    [System.SerializableAttribute()]
    public partial class ProductionUploadInfoDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UploadDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UploadDate {
            get {
                return this.UploadDateField;
            }
            set {
                if ((this.UploadDateField.Equals(value) != true)) {
                    this.UploadDateField = value;
                    this.RaisePropertyChanged("UploadDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LanguageDTO", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    [System.SerializableAttribute()]
    public partial class LanguageDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Iso2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Iso3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Iso2 {
            get {
                return this.Iso2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Iso2Field, value) != true)) {
                    this.Iso2Field = value;
                    this.RaisePropertyChanged("Iso2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Iso3 {
            get {
                return this.Iso3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Iso3Field, value) != true)) {
                    this.Iso3Field = value;
                    this.RaisePropertyChanged("Iso3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetLatestApprovedGameVersionForEachRegulationAndClientType", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service")]
    [System.SerializableAttribute()]
    public partial class GetLatestApprovedGameVersionForEachRegulationAndClientType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.LatestApprovedGameVersionForRegulationAndClientTypeDTO[] LatestApprovedGamesVersionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.LatestApprovedGameVersionForRegulationAndClientTypeDTO[] LatestApprovedGamesVersions {
            get {
                return this.LatestApprovedGamesVersionsField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestApprovedGamesVersionsField, value) != true)) {
                    this.LatestApprovedGamesVersionsField = value;
                    this.RaisePropertyChanged("LatestApprovedGamesVersions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LatestApprovedGameVersionForRegulationAndClientTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    [System.SerializableAttribute()]
    public partial class LatestApprovedGameVersionForRegulationAndClientTypeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GameIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.GameInfrastructureDTO GameInfrastructureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GameNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExternalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MainGameTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.LatestVersionInfoDTO PMVersionInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.PlatformType PlatformTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.LatestVersionInfoDTO QAVersionInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegulationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientType {
            get {
                return this.ClientTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientTypeField, value) != true)) {
                    this.ClientTypeField = value;
                    this.RaisePropertyChanged("ClientType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GameId {
            get {
                return this.GameIdField;
            }
            set {
                if ((this.GameIdField.Equals(value) != true)) {
                    this.GameIdField = value;
                    this.RaisePropertyChanged("GameId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.GameInfrastructureDTO GameInfrastructure {
            get {
                return this.GameInfrastructureField;
            }
            set {
                if ((object.ReferenceEquals(this.GameInfrastructureField, value) != true)) {
                    this.GameInfrastructureField = value;
                    this.RaisePropertyChanged("GameInfrastructure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GameName {
            get {
                return this.GameNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GameNameField, value) != true)) {
                    this.GameNameField = value;
                    this.RaisePropertyChanged("GameName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExternal {
            get {
                return this.IsExternalField;
            }
            set {
                if ((this.IsExternalField.Equals(value) != true)) {
                    this.IsExternalField = value;
                    this.RaisePropertyChanged("IsExternal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastVersion {
            get {
                return this.LastVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.LastVersionField, value) != true)) {
                    this.LastVersionField = value;
                    this.RaisePropertyChanged("LastVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MainGameType {
            get {
                return this.MainGameTypeField;
            }
            set {
                if ((this.MainGameTypeField.Equals(value) != true)) {
                    this.MainGameTypeField = value;
                    this.RaisePropertyChanged("MainGameType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.LatestVersionInfoDTO PMVersionInfo {
            get {
                return this.PMVersionInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PMVersionInfoField, value) != true)) {
                    this.PMVersionInfoField = value;
                    this.RaisePropertyChanged("PMVersionInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.PlatformType PlatformType {
            get {
                return this.PlatformTypeField;
            }
            set {
                if ((this.PlatformTypeField.Equals(value) != true)) {
                    this.PlatformTypeField = value;
                    this.RaisePropertyChanged("PlatformType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.LatestVersionInfoDTO QAVersionInfo {
            get {
                return this.QAVersionInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.QAVersionInfoField, value) != true)) {
                    this.QAVersionInfoField = value;
                    this.RaisePropertyChanged("QAVersionInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Regulation {
            get {
                return this.RegulationField;
            }
            set {
                if ((object.ReferenceEquals(this.RegulationField, value) != true)) {
                    this.RegulationField = value;
                    this.RaisePropertyChanged("Regulation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LatestVersionInfoDTO", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    [System.SerializableAttribute()]
    public partial class LatestVersionInfoDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.DownloadInfoDTO DownloadInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid VersionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.DownloadInfoDTO DownloadInfo {
            get {
                return this.DownloadInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadInfoField, value) != true)) {
                    this.DownloadInfoField = value;
                    this.RaisePropertyChanged("DownloadInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid VersionId {
            get {
                return this.VersionIdField;
            }
            set {
                if ((this.VersionIdField.Equals(value) != true)) {
                    this.VersionIdField = value;
                    this.RaisePropertyChanged("VersionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetLatestGameVersionForEachGameResponse", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service")]
    [System.SerializableAttribute()]
    public partial class GetLatestGameVersionForEachGameResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.LatestGameVersionForRegulationDTO[] VersionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.LatestGameVersionForRegulationDTO[] Versions {
            get {
                return this.VersionsField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionsField, value) != true)) {
                    this.VersionsField = value;
                    this.RaisePropertyChanged("Versions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LatestGameVersionForRegulationDTO", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    [System.SerializableAttribute()]
    public partial class LatestGameVersionForRegulationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.DownloadInfoDTO DownloadInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GameIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.GameInfrastructureDTO GameInfrastructureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GameNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GameVersionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExternalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MainGameTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegulationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.DownloadInfoDTO DownloadInfo {
            get {
                return this.DownloadInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadInfoField, value) != true)) {
                    this.DownloadInfoField = value;
                    this.RaisePropertyChanged("DownloadInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GameId {
            get {
                return this.GameIdField;
            }
            set {
                if ((this.GameIdField.Equals(value) != true)) {
                    this.GameIdField = value;
                    this.RaisePropertyChanged("GameId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.GameInfrastructureDTO GameInfrastructure {
            get {
                return this.GameInfrastructureField;
            }
            set {
                if ((object.ReferenceEquals(this.GameInfrastructureField, value) != true)) {
                    this.GameInfrastructureField = value;
                    this.RaisePropertyChanged("GameInfrastructure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GameName {
            get {
                return this.GameNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GameNameField, value) != true)) {
                    this.GameNameField = value;
                    this.RaisePropertyChanged("GameName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GameVersionId {
            get {
                return this.GameVersionIdField;
            }
            set {
                if ((this.GameVersionIdField.Equals(value) != true)) {
                    this.GameVersionIdField = value;
                    this.RaisePropertyChanged("GameVersionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExternal {
            get {
                return this.IsExternalField;
            }
            set {
                if ((this.IsExternalField.Equals(value) != true)) {
                    this.IsExternalField = value;
                    this.RaisePropertyChanged("IsExternal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MainGameType {
            get {
                return this.MainGameTypeField;
            }
            set {
                if ((this.MainGameTypeField.Equals(value) != true)) {
                    this.MainGameTypeField = value;
                    this.RaisePropertyChanged("MainGameType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Regulation {
            get {
                return this.RegulationField;
            }
            set {
                if ((object.ReferenceEquals(this.RegulationField, value) != true)) {
                    this.RegulationField = value;
                    this.RaisePropertyChanged("Regulation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetNeverApprovedGameResponse", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service")]
    [System.SerializableAttribute()]
    public partial class GetNeverApprovedGameResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.NeverApprovedGameDto[] GamesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.NeverApprovedGameDto[] Games {
            get {
                return this.GamesField;
            }
            set {
                if ((object.ReferenceEquals(this.GamesField, value) != true)) {
                    this.GamesField = value;
                    this.RaisePropertyChanged("Games");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NeverApprovedGameDto", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service")]
    [System.SerializableAttribute()]
    public partial class NeverApprovedGameDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.GameInfrastructureDTO GameInfrastructureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GameNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LatestVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MainGameTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.GameInfrastructureDTO GameInfrastructure {
            get {
                return this.GameInfrastructureField;
            }
            set {
                if ((object.ReferenceEquals(this.GameInfrastructureField, value) != true)) {
                    this.GameInfrastructureField = value;
                    this.RaisePropertyChanged("GameInfrastructure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GameName {
            get {
                return this.GameNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GameNameField, value) != true)) {
                    this.GameNameField = value;
                    this.RaisePropertyChanged("GameName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LatestVersion {
            get {
                return this.LatestVersionField;
            }
            set {
                if ((this.LatestVersionField.Equals(value) != true)) {
                    this.LatestVersionField = value;
                    this.RaisePropertyChanged("LatestVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MainGameType {
            get {
                return this.MainGameTypeField;
            }
            set {
                if ((this.MainGameTypeField.Equals(value) != true)) {
                    this.MainGameTypeField = value;
                    this.RaisePropertyChanged("MainGameType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGamesReleasesRequest", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service")]
    [System.SerializableAttribute()]
    public partial class GetGamesReleasesRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FromDate {
            get {
                return this.FromDateField;
            }
            set {
                if ((this.FromDateField.Equals(value) != true)) {
                    this.FromDateField = value;
                    this.RaisePropertyChanged("FromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ToDate {
            get {
                return this.ToDateField;
            }
            set {
                if ((this.ToDateField.Equals(value) != true)) {
                    this.ToDateField = value;
                    this.RaisePropertyChanged("ToDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGamesReleasesResponse", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service")]
    [System.SerializableAttribute()]
    public partial class GetGamesReleasesResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.GameVersionReleaseDTO[] GameVersionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.GameVersionReleaseDTO[] GameVersions {
            get {
                return this.GameVersionsField;
            }
            set {
                if ((object.ReferenceEquals(this.GameVersionsField, value) != true)) {
                    this.GameVersionsField = value;
                    this.RaisePropertyChanged("GameVersions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameVersionReleaseDTO", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    [System.SerializableAttribute()]
    public partial class GameVersionReleaseDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DownloadUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GameIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.GameInfrastructureDTO GameInfrastructureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GameVersionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExternalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MainGameTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegulationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TriggeredByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DownloadUrl {
            get {
                return this.DownloadUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadUrlField, value) != true)) {
                    this.DownloadUrlField = value;
                    this.RaisePropertyChanged("DownloadUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GameId {
            get {
                return this.GameIdField;
            }
            set {
                if ((this.GameIdField.Equals(value) != true)) {
                    this.GameIdField = value;
                    this.RaisePropertyChanged("GameId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.GameInfrastructureDTO GameInfrastructure {
            get {
                return this.GameInfrastructureField;
            }
            set {
                if ((object.ReferenceEquals(this.GameInfrastructureField, value) != true)) {
                    this.GameInfrastructureField = value;
                    this.RaisePropertyChanged("GameInfrastructure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GameVersionId {
            get {
                return this.GameVersionIdField;
            }
            set {
                if ((this.GameVersionIdField.Equals(value) != true)) {
                    this.GameVersionIdField = value;
                    this.RaisePropertyChanged("GameVersionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExternal {
            get {
                return this.IsExternalField;
            }
            set {
                if ((this.IsExternalField.Equals(value) != true)) {
                    this.IsExternalField = value;
                    this.RaisePropertyChanged("IsExternal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MainGameType {
            get {
                return this.MainGameTypeField;
            }
            set {
                if ((this.MainGameTypeField.Equals(value) != true)) {
                    this.MainGameTypeField = value;
                    this.RaisePropertyChanged("MainGameType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Regulation {
            get {
                return this.RegulationField;
            }
            set {
                if ((object.ReferenceEquals(this.RegulationField, value) != true)) {
                    this.RegulationField = value;
                    this.RaisePropertyChanged("Regulation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TriggeredBy {
            get {
                return this.TriggeredByField;
            }
            set {
                if ((object.ReferenceEquals(this.TriggeredByField, value) != true)) {
                    this.TriggeredByField = value;
                    this.RaisePropertyChanged("TriggeredBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRegulationsInfoResponse", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service")]
    [System.SerializableAttribute()]
    public partial class GetRegulationsInfoResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.RegulationDTO[] RegulationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.RegulationDTO[] Regulations {
            get {
                return this.RegulationsField;
            }
            set {
                if ((object.ReferenceEquals(this.RegulationsField, value) != true)) {
                    this.RegulationsField = value;
                    this.RaisePropertyChanged("Regulations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegulationDTO", Namespace="http://schemas.datacontract.org/2004/07/GamesPortal.Service.Entities")]
    [System.SerializableAttribute()]
    public partial class RegulationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GGPMockBootstrapper.GamesPortalService.LanguageDTO[] MandatoryLanguagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegulationNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GGPMockBootstrapper.GamesPortalService.LanguageDTO[] MandatoryLanguages {
            get {
                return this.MandatoryLanguagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MandatoryLanguagesField, value) != true)) {
                    this.MandatoryLanguagesField = value;
                    this.RaisePropertyChanged("MandatoryLanguages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegulationName {
            get {
                return this.RegulationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegulationNameField, value) != true)) {
                    this.RegulationNameField = value;
                    this.RaisePropertyChanged("RegulationName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GamesPortalService.IGamesPortalService")]
    public interface IGamesPortalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalService/GetGame", ReplyAction="http://tempuri.org/IGamesPortalService/GetGameResponse")]
        GGPMockBootstrapper.GamesPortalService.GetGameResponse GetGame(System.Guid gameId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalService/GetAllGames", ReplyAction="http://tempuri.org/IGamesPortalService/GetAllGamesResponse")]
        GGPMockBootstrapper.GamesPortalService.GetAllGamesResponse GetAllGames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalService/GetGameVersions", ReplyAction="http://tempuri.org/IGamesPortalService/GetGameVersionsResponse")]
        GGPMockBootstrapper.GamesPortalService.GetGameVersionsResponse GetGameVersions(System.Guid gameId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalService/GetLatestApprovedGameVersionForEachRegulat" +
            "ionAndClientType", ReplyAction="http://tempuri.org/IGamesPortalService/GetLatestApprovedGameVersionForEachRegulat" +
            "ionAndClientTypeResponse")]
        GGPMockBootstrapper.GamesPortalService.GetLatestApprovedGameVersionForEachRegulationAndClientType GetLatestApprovedGameVersionForEachRegulationAndClientType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalService/GetLatestGameVersionForEachRegulation", ReplyAction="http://tempuri.org/IGamesPortalService/GetLatestGameVersionForEachRegulationRespo" +
            "nse")]
        GGPMockBootstrapper.GamesPortalService.GetLatestGameVersionForEachGameResponse GetLatestGameVersionForEachRegulation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalService/GetNeverApprovedGames", ReplyAction="http://tempuri.org/IGamesPortalService/GetNeverApprovedGamesResponse")]
        GGPMockBootstrapper.GamesPortalService.GetNeverApprovedGameResponse GetNeverApprovedGames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalService/GetOptions", ReplyAction="http://tempuri.org/IGamesPortalService/GetOptionsResponse")]
        void GetOptions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalService/GetGameReleases", ReplyAction="http://tempuri.org/IGamesPortalService/GetGameReleasesResponse")]
        GGPMockBootstrapper.GamesPortalService.GetGamesReleasesResponse GetGameReleases(GGPMockBootstrapper.GamesPortalService.GetGamesReleasesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesPortalService/GetRegulationsInfo", ReplyAction="http://tempuri.org/IGamesPortalService/GetRegulationsInfoResponse")]
        GGPMockBootstrapper.GamesPortalService.GetRegulationsInfoResponse GetRegulationsInfo();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGamesPortalServiceChannel : GGPMockBootstrapper.GamesPortalService.IGamesPortalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GamesPortalServiceClient : System.ServiceModel.ClientBase<GGPMockBootstrapper.GamesPortalService.IGamesPortalService>, GGPMockBootstrapper.GamesPortalService.IGamesPortalService {
        
        public GamesPortalServiceClient() {
        }
        
        public GamesPortalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GamesPortalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GamesPortalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GamesPortalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GGPMockBootstrapper.GamesPortalService.GetGameResponse GetGame(System.Guid gameId) {
            return base.Channel.GetGame(gameId);
        }
        
        public GGPMockBootstrapper.GamesPortalService.GetAllGamesResponse GetAllGames() {
            return base.Channel.GetAllGames();
        }
        
        public GGPMockBootstrapper.GamesPortalService.GetGameVersionsResponse GetGameVersions(System.Guid gameId) {
            return base.Channel.GetGameVersions(gameId);
        }
        
        public GGPMockBootstrapper.GamesPortalService.GetLatestApprovedGameVersionForEachRegulationAndClientType GetLatestApprovedGameVersionForEachRegulationAndClientType() {
            return base.Channel.GetLatestApprovedGameVersionForEachRegulationAndClientType();
        }
        
        public GGPMockBootstrapper.GamesPortalService.GetLatestGameVersionForEachGameResponse GetLatestGameVersionForEachRegulation() {
            return base.Channel.GetLatestGameVersionForEachRegulation();
        }
        
        public GGPMockBootstrapper.GamesPortalService.GetNeverApprovedGameResponse GetNeverApprovedGames() {
            return base.Channel.GetNeverApprovedGames();
        }
        
        public void GetOptions() {
            base.Channel.GetOptions();
        }
        
        public GGPMockBootstrapper.GamesPortalService.GetGamesReleasesResponse GetGameReleases(GGPMockBootstrapper.GamesPortalService.GetGamesReleasesRequest request) {
            return base.Channel.GetGameReleases(request);
        }
        
        public GGPMockBootstrapper.GamesPortalService.GetRegulationsInfoResponse GetRegulationsInfo() {
            return base.Channel.GetRegulationsInfo();
        }
    }
}
