<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:tns="http://schemas.datacontract.org/2004/07/GGPGameServer.Simulations.GGPMock" elementFormDefault="qualified" targetNamespace="http://schemas.datacontract.org/2004/07/GGPGameServer.Simulations.GGPMock" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import schemaLocation="http://localhost:8687/GGPMockOpenSessionProviderService?xsd=xsd3" namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
  <xs:complexType name="GetOpenSessionRequest">
    <xs:sequence>
      <xs:element minOccurs="0" name="CID" type="xs:int" />
      <xs:element minOccurs="0" name="OperatorID" type="xs:int" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="GetOpenSessionRequest" nillable="true" type="tns:GetOpenSessionRequest" />
  <xs:complexType name="ArrayOfGetOpenSessionResponse">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="GetOpenSessionResponse" nillable="true" type="tns:GetOpenSessionResponse" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfGetOpenSessionResponse" nillable="true" type="tns:ArrayOfGetOpenSessionResponse" />
  <xs:complexType name="GetOpenSessionResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="BankrollBalance" type="xs:long" />
      <xs:element minOccurs="0" name="FreePlayMockData" nillable="true" type="tns:FreePlayMockData" />
      <xs:element minOccurs="0" name="GameCurrencyCode" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="GameState" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="GameString" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="GameType" type="xs:int" />
      <xs:element minOccurs="0" name="PlayerSessionID" type="xs:long" />
      <xs:element minOccurs="0" name="RegulationId" type="xs:int" />
      <xs:element minOccurs="0" name="SessionObject" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="SubGameString" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="SubGameType" type="xs:int" />
      <xs:element minOccurs="0" name="TimeStamp" type="xs:dateTime" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="GetOpenSessionResponse" nillable="true" type="tns:GetOpenSessionResponse" />
  <xs:complexType name="FreePlayMockData">
    <xs:sequence>
      <xs:element xmlns:q1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="AlternativeGames" nillable="true" type="q1:ArrayOfint" />
      <xs:element minOccurs="0" name="Balance" type="xs:long" />
      <xs:element minOccurs="0" name="ExpirationDate" nillable="true" type="xs:dateTime" />
      <xs:element minOccurs="0" name="FreePlayID" nillable="true" type="xs:long" />
      <xs:element minOccurs="0" name="FreePlayState" nillable="true" type="tns:FreePlayStateMock" />
      <xs:element minOccurs="0" name="FreePlayType" type="xs:int" />
      <xs:element xmlns:q2="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="GamesTypes" nillable="true" type="q2:ArrayOfint" />
      <xs:element minOccurs="0" name="MaxBetAmount" type="xs:long" />
      <xs:element minOccurs="0" name="MaxWinningCap" nillable="true" type="xs:long" />
      <xs:element minOccurs="0" name="TotalWinnings" type="xs:long" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="FreePlayMockData" nillable="true" type="tns:FreePlayMockData" />
  <xs:complexType name="FreePlayStateMock">
    <xs:sequence>
      <xs:element minOccurs="0" name="Id" type="xs:int" />
      <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="FreePlayStateMock" nillable="true" type="tns:FreePlayStateMock" />
  <xs:complexType name="LoadDisconnectionRequest">
    <xs:sequence>
      <xs:element minOccurs="0" name="PlayerSessionID" type="xs:long" />
      <xs:element minOccurs="0" name="SessionObject" nillable="true" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="LoadDisconnectionRequest" nillable="true" type="tns:LoadDisconnectionRequest" />
</xs:schema>